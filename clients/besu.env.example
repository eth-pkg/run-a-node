# Enable automatic log bloom caching
AUTO_LOG_BLOOM_CACHING_ENABLED=true

# Limit of historical layers that can be loaded with BONSAI
BONSAI_HISTORICAL_BLOCK_LIMIT=512

# Specifies the number of last blocks to cache
CACHE_LAST_BLOCKS=0

# Force color output to be enabled/disabled
COLOR_ENABLED=true

# Enable the legacy Eth/64 fork id
COMPATIBILITY_ETH64_FORKID_ENABLED=false

# TOML config file
CONFIG_FILE=/path/to/config.toml

# The path to Besu data directory
DATA_PATH=/usr/lib/eth-node-besu/besu

# Format to store trie data in
DATA_STORAGE_FORMAT=BONSAI

# Reporting URL of a ethstats server
ETHSTATS=ws://nodename:secret@host:port

# Path to the root CA certificate file
ETHSTATS_CACERT_FILE=/path/to/cacert.pem

# Contact address to send to ethstats server
ETHSTATS_CONTACT=contact@example.com

# Genesis file for your custom network
GENESIS_FILE=/path/to/genesis.json

# Use genesis state hash from data on startup if specified
GENESIS_STATE_HASH_CACHE_ENABLED=true

# Comma separated list of hostnames to allow for RPC access
HOST_ALLOWLIST=localhost,127.0.0.1

# Identification for this node in the Client ID
IDENTITY=MyNode

# Identity for the key-value storage to be used
KEY_VALUE_STORAGE=rocksdb

# Path to file containing the KZG trusted setup
KZG_TRUSTED_SETUP=/path/to/kzg_trusted_setup.json

# Logging verbosity levels
LOGGING=INFO

# Specify the NAT circumvention method to be used
NAT_METHOD=AUTO

# Synchronize against the indicated network
NETWORK=MAINNET

# P2P network identifier
NETWORK_ID=1

# The node's private key file
NODE_PRIVATE_KEY_FILE=/path/to/key

# Path to PID file
PID_PATH=/path/to/pidfile.pid

# Overwrite default settings
PROFILE=Enterprise

# Enables compact storing of receipts
RECEIPT_COMPACTION_ENABLED=false

# How deep a chain reorganization must be in order for it to be logged
REORG_LOGGING_THRESHOLD=6

# Block number and hash peers are required to have
REQUIRED_BLOCK=1=0x1234567890abcdef

# Enable passing the revert reason back through TransactionReceipts
REVERT_REASON_ENABLED=false

# Identity for the Security Module to be used
SECURITY_MODULE=moduleName

# Specifies the static node file containing the static nodes for this node to connect to
STATIC_NODES_FILE=/path/to/static_nodes.json

# Minimum number of peers required before starting sync
SYNC_MIN_PEERS=5

# Synchronization mode
SYNC_MODE=SNAP

# Print version information and exit
VERSION_COMPATIBILITY_PROTECTION=null

# Max amount of memory space, in bytes, that any layer within the transaction pool could occupy
TX_POOL_LAYER_MAX_CAPACITY=12500000

# Max number of future pending transactions allowed for a single sender
TX_POOL_MAX_FUTURE_BY_SENDER=200

# Max number of pending transactions that are prioritized and thus kept sorted
TX_POOL_MAX_PRIORITIZED=2000

# Max number of pending transactions, of a specific type, that are prioritized and thus kept sorted
TX_POOL_MAX_PRIORITIZED_BY_TYPE={BLOB=6}

# Maximum portion of the transaction pool which a single account may occupy with future transactions
TX_POOL_LIMIT_BY_ACCOUNT_PERCENTAGE=0.001

# Maximum number of pending transactions that will be kept in the transaction pool
TX_POOL_MAX_SIZE=4096

# Maximum retention period of pending transactions in hours
TX_POOL_RETENTION_HOURS=13

# Maximum transaction fees (in Wei) accepted for transaction submitted through RPC
RPC_TX_FEECAP=0x0de0b6b3a7640000

# Require transactions submitted via JSON-RPC to use replay protection in accordance with EIP-155
STRICT_TX_REPLAY_PROTECTION_ENABLED=false

# The Transaction Pool implementation to use
TX_POOL=LAYERED

# Blob price bump percentage to replace an already existing transaction blob tx
TX_POOL_BLOB_PRICE_BUMP=100

# Set to true if senders of transactions sent via RPC should not have priority
TX_POOL_DISABLE_LOCALS=false

# Set to true to enable saving the txpool content to file on shutdown and reloading it on startup
TX_POOL_ENABLE_SAVE_RESTORE=false

# Transactions with gas price (in Wei) lower than this minimum will not be accepted into the txpool
TX_POOL_MIN_GAS_PRICE=0x3e8

# Price bump percentage to replace an already existing transaction
TX_POOL_PRICE_BUMP=10

# Pending transactions sent exclusively by these addresses are prioritized and only evicted after all others
TX_POOL_PRIORITY_SENDERS=0xAddress1,0xAddress2

# Define a custom path for the txpool save file
TX_POOL_SAVE_FILE=/path/to/txpool.dump

# Specifies the maximum time, in milliseconds, that could be spent selecting transactions to be included in the block
BLOCK_TXS_SELECTION_MAX_TIME=5000

# Minimum occupancy ratio for a mined block
MIN_BLOCK_OCCUPANCY_RATIO=0.8

# Minimum price (in Wei) offered by a transaction for it to be included in a mined block
MIN_GAS_PRICE=0x3e8

# Minimum priority fee per gas (in Wei) offered by a transaction for it to be included in a block
MIN_PRIORITY_FEE=0x0

# Account to which mining rewards are paid
MINER_COINBASE=0xYourCoinbaseAddress

# Set if node will perform mining
MINER_ENABLED=false

# A hex string representing the (32) bytes to be included in the extra data field of a mined block
MINER_EXTRA_DATA=0x

# Set if node will perform Stratum mining
MINER_STRATUM_ENABLED=false

# Host for Stratum network mining service
MINER_STRATUM_HOST=0.0.0.0

# Stratum port binding
MINER_STRATUM_PORT=8008

# Specifies the maximum time that could be spent selecting transactions to be included in the block
POA_BLOCK_TXS_SELECTION_MAX_TIME=75

# Sets target gas limit per block
TARGET_GAS_LIMIT=10000000

# A list of node IDs to ban from the P2P network
BANNED_NODE_ID=id1,id2

# Comma separated enode URLs for P2P discovery bootstrap
BOOTNODES=enode://id@host:port

# Specifies the URL to use for DNS discovery
DISCOVERY_DNS_URL=http://discovery.example.com

# Enable P2P discovery
DISCOVERY_ENABLED=true

# Maximum P2P connections that can be established
MAX_PEERS=25

# Enable P2P functionality
P2P_ENABLED=true

# IP address this node advertises to its peers
P2P_HOST=127.0.0.1

# The network interface address on which this node listens for P2P communication
P2P_INTERFACE=0.0.0.0

# Port on which to listen for P2P communication
P2P_PORT=30303

# Allow for incoming connections to be prioritized randomly
RANDOM_PEER_PRIORITY_ENABLED=false

# Whether to limit the number of P2P connections initiated remotely
REMOTE_CONNECTIONS_LIMIT_ENABLED=true

# The maximum percentage of P2P connections that can be initiated remotely
REMOTE_CONNECTIONS_MAX_PERCENTAGE=60

# Comma separated origin domain URLs for CORS validation for GraphQL HTTP service
GRAPHQL_HTTP_CORS_ORIGINS=http://example.com

# Set to start the GraphQL HTTP service
GRAPHQL_HTTP_ENABLED=false

# Host for GraphQL HTTP to listen on
GRAPHQL_HTTP_HOST=127.0.0.1

# Port for GraphQL HTTP to listen on
GRAPHQL_HTTP_PORT=8547

# Comma separated list of hostnames to allow for ENGINE API access
ENGINE_HOST_ALLOWLIST=localhost,127.0.0.1

# Disable authentication for Engine APIs
ENGINE_JWT_DISABLED=false

# Path to file containing shared secret key for JWT signature verification
ENGINE_JWT_SECRET=/path/to/jwt.secret

# Enable the engine API
ENGINE_RPC_ENABLED=false

# Port to provide consensus client APIS on
ENGINE_RPC_PORT=8551

# Enable JSON pretty print format
JSON_PRETTY_PRINT_ENABLED=false

# Comma separated list of APIs to enable on JSON-RPC HTTP service
RPC_HTTP_API=ETH,NET,WEB3

# Comma separated list of API methods to exclude from RPC authentication services
RPC_HTTP_API_METHOD_NO_AUTH=method1,method2

# Storage file for JSON-RPC HTTP authentication credentials
RPC_HTTP_AUTHENTICATION_CREDENTIALS_FILE=/path/to/credentials.file

# Require authentication for the JSON-RPC HTTP service
RPC_HTTP_AUTHENTICATION_ENABLED=false

# Encryption algorithm used for HTTP JWT public key
RPC_HTTP_AUTHENTICATION_JWT_ALGORITHM=RS256

# JWT public key file for JSON-RPC HTTP authentication
RPC_HTTP_AUTHENTICATION_JWT_PUBLIC_KEY_FILE=/path/to/public_key.pem

# Comma separated origin domain URLs for CORS validation for JSON-RPC HTTP service
RPC_HTTP_CORS_ORIGINS=http://example.com

# Set to start the JSON-RPC HTTP service
RPC_HTTP_ENABLED=false

# Host for JSON-RPC HTTP to listen on
RPC_HTTP_HOST=127.0.0.1

# Maximum number of HTTP connections allowed for JSON-RPC
RPC_HTTP_MAX_ACTIVE_CONNECTIONS=80

# Specifies the maximum number of requests in a single RPC batch request via RPC
RPC_HTTP_MAX_BATCH_SIZE=1024

# Specifies the maximum request content length
RPC_HTTP_MAX_REQUEST_CONTENT_LENGTH=5242880

# Port for JSON-RPC HTTP to listen on
RPC_HTTP_PORT=8545

# Enable to accept clients certificate signed by a valid CA for client authentication
RPC_HTTP_TLS_CA_CLIENTS_ENABLED=false

# Comma separated list of TLS cipher suites to support for JSON-RPC HTTP service
RPC_HTTP_TLS_CIPHER_SUITES=TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384

# Enable TLS client authentication for the JSON-RPC HTTP service
RPC_HTTP_TLS_CLIENT_AUTH_ENABLED=false

# Enable TLS for the JSON-RPC HTTP service
RPC_HTTP_TLS_ENABLED=false

# Keystore (PKCS#12) containing key/certificate for the JSON-RPC HTTP service
RPC_HTTP_TLS_KEYSTORE_FILE=/path/to/keystore.p12

# File containing password to unlock keystore for the JSON-RPC HTTP service
RPC_HTTP_TLS_KEYSTORE_PASSWORD_FILE=/path/to/password.file

# Path to file containing clients certificate common name and fingerprint for client authentication
RPC_HTTP_TLS_KNOWN_CLIENTS_FILE=/path/to/known_clients.file

# Comma separated list of TLS protocols to support for JSON-RPC HTTP service
RPC_HTTP_TLS_PROTOCOLS=TLSv1.3,TLSv1.2

# Comma separated list of APIs to enable on JSON-RPC WebSocket service
RPC_WS_API=ETH,NET,WEB3

# Comma separated list of RPC methods to exclude from RPC authentication services
RPC_WS_API_METHOD_NO_AUTH=method1,method2

# Storage file for JSON-RPC WebSocket authentication credentials
RPC_WS_AUTHENTICATION_CREDENTIALS_FILE=/path/to/ws_credentials.file

# Require authentication for the JSON-RPC WebSocket service
RPC_WS_AUTHENTICATION_ENABLED=false

# Encryption algorithm used for Websockets JWT public key
RPC_WS_AUTHENTICATION_JWT_ALGORITHM=RS256

# JWT public key file for JSON-RPC WebSocket authentication
RPC_WS_AUTHENTICATION_JWT_PUBLIC_KEY_FILE=/path/to/ws_public_key.pem

# Set to start the JSON-RPC WebSocket service
RPC_WS_ENABLED=false

# Host for JSON-RPC WebSocket service to listen on
RPC_WS_HOST=127.0.0.1

# Maximum number of WebSocket connections allowed for JSON-RPC
RPC_WS_MAX_ACTIVE_CONNECTIONS=80

# Maximum size in bytes for JSON-RPC WebSocket frames
RPC_WS_MAX_FRAME_SIZE=1048576

# Port for JSON-RPC WebSocket service to listen on
RPC_WS_PORT=8546

# Enable private database metadata migration
PRIVACY_ENABLE_DATABASE_MIGRATION=false

# Enable private transactions
PRIVACY_ENABLED=false

# Enable flexible privacy groups
PRIVACY_FLEXIBLE_GROUPS_ENABLED=false

# The name of a file containing the private key used to sign privacy marker transactions
PRIVACY_MARKER_TRANSACTION_SIGNING_KEY_FILE=/path/to/private_key

# Enable multi-tenant private transactions
PRIVACY_MULTI_TENANCY_ENABLED=false

# The enclave's public key file
PRIVACY_PUBLIC_KEY_FILE=/path/to/public_key.pem

# Enable TLS for connecting to privacy enclave
PRIVACY_TLS_ENABLED=false

# Path to a PKCS#12 formatted keystore; used to enable TLS on inbound connections
PRIVACY_TLS_KEYSTORE_FILE=/path/to/privacy_keystore.p12

# Path to a file containing the password used to decrypt the keystore
PRIVACY_TLS_KEYSTORE_PASSWORD_FILE=/path/to/privacy_password.file

# Path to a file containing the fingerprints of the authorized privacy enclave
PRIVACY_TLS_KNOWN_ENCLAVE_FILE=/path/to/privacy_known_enclave.file

# The URL on which the enclave is running
PRIVACY_URL=http://privacy.example.com

# Comma separated list of categories to track metrics for
METRICS_CATEGORY=BLOCKCHAIN,ETHEREUM,EXECUTORS,NETWORK,PEERS,PERMISSIONING,PRUNER,RPC,SYNCHRONIZER,TRANSACTION_POOL,STRATUM,JVM,PROCESS

# Set to start the metrics exporter
METRICS_ENABLED=false

# Host for the metrics exporter to listen on
METRICS_HOST=127.0.0.1

# Port for the metrics exporter to listen on
METRICS_PORT=9545

# Metrics protocol
METRICS_PROTOCOL=PROMETHEUS

# Enable the metrics push gateway integration
METRICS_PUSH_ENABLED=false

# Host of the Prometheus Push Gateway for push mode
METRICS_PUSH_HOST=pushgateway.example.com

# Interval in seconds to push metrics when in push mode
METRICS_PUSH_INTERVAL=15

# Port of the Prometheus Push Gateway for push mode
METRICS_PUSH_PORT=9001

# Job name to use when in push mode
METRICS_PUSH_PROMETHEUS_JOB=besu-client

# Account permissioning config TOML file
PERMISSIONS_ACCOUNTS_CONFIG_FILE=/path/to/accounts_permissions_config.toml

# Enable account level permissions
PERMISSIONS_ACCOUNTS_CONFIG_FILE_ENABLED=false

# Address of the account permissioning smart contract
PERMISSIONS_ACCOUNTS_CONTRACT_ADDRESS=0xPermissionsContractAddress

# Enable account level permissions via smart contract
PERMISSIONS_ACCOUNTS_CONTRACT_ENABLED=false

# Node permissioning config TOML file
PERMISSIONS_NODES_CONFIG_FILE=/path/to/nodes_permissions_config.toml

# Enable node level permissions
PERMISSIONS_NODES_CONFIG_FILE_ENABLED=false

# Address of the node permissioning smart contract
PERMISSIONS_NODES_CONTRACT_ADDRESS=0xNodesContractAddress

# Enable node level permissions via smart contract
PERMISSIONS_NODES_CONTRACT_ENABLED=false

# Version of the EEA Node Permissioning interface
PERMISSIONS_NODES_CONTRACT_VERSION=1

# Number of blocks to consider for eth_gasPrice
API_GAS_PRICE_BLOCKS=100

# Maximum gas price for eth_gasPrice
API_GAS_PRICE_MAX=500000000000

# Percentile value to measure for eth_gasPrice
API_GAS_PRICE_PERCENTILE=50.0

# Specifies the gasLimit cap for transaction simulation RPC methods
RPC_GAS_CAP=0

# Specifies the maximum number of blocks to retrieve logs from via RPC
RPC_MAX_LOGS_RANGE=5000

# Specifies the maximum number of blocks for the trace_filter method
RPC_MAX_TRACE_FILTER_RANGE=$DEFAULT-VALUE
