# Lodestar root data directory
DATA_DIR=

# Name of the Ethereum Consensus chain network to join
NETWORK=mainnet
# choices: "mainnet", "gnosis", "goerli", "ropsten", "sepolia", "holesky", "chiado", "ephemery", "dev"

# Network configuration file
PARAMS_FILE=

# Terminal PoW block TTD override
TERMINAL_TOTAL_DIFFICULTY_OVERRIDE=

# Terminal PoW block hash override
TERMINAL_BLOCK_HASH_OVERRIDE=

# Terminal PoW block hash override activation epoch
TERMINAL_BLOCK_HASH_EPOCH_OVERRIDE=

# Logging verbosity level for emitting logs to terminal
LOG_LEVEL=info
# choices: "error", "warn", "info", "verbose", "debug", "trace"

# Path to output all logs to a persistent log file, use 'none' to disable
LOG_FILE=

# Logging verbosity level for emitting logs to file
LOG_FILE_LEVEL=debug
# choices: "error", "warn", "info", "verbose", "debug", "trace"

# Daily rotate log files, set to an integer to limit the file count, set to 0 (zero) to disable rotation
LOG_FILE_DAILY_ROTATE=5

# Enable key manager API server
KEYMANAGER=

# Enable token bearer authentication for key manager API server
KEYMANAGER_AUTH=true

# Path to file containing bearer token used for key manager API authentication
KEYMANAGER_TOKEN_FILE=

# Set port for key manager API
KEYMANAGER_PORT=5062

# Set host for key manager API
KEYMANAGER_ADDRESS="127.0.0.1"

# Configures the Access-Control-Allow-Origin CORS header for key manager API
KEYMANAGER_CORS="*"

# Addresses to connect to BeaconNode
BEACON_NODES=http://127.0.0.1:9596

# Open validators even if there's a lockfile. Use with caution
FORCE=false

# Specify your custom graffiti to be included in blocks (plain UTF8 text, 32 characters max)
GRAFFITI=

# A yaml file to specify detailed default and per validator public key customized proposer configs. PS: This feature and its format is in alpha and subject to change
PROPOSER_SETTINGS_FILE=

# Specify fee recipient default for collecting the EL block fees and rewards (a hex string representing 20 bytes address: ^0x[a-fA-F0-9]{40}$). It would be possible (WIP) to override this per validator key using config or key manager API. Only used post merge.
SUGGESTED_FEE_RECIPIENT=0x0000000000000000000000000000000000000000

# Enable strict checking of the validator's feeRecipient with the one returned by engine
STRICT_FEE_RECIPIENT_CHECK=

# Suggested gas limit to the engine/builder for building execution payloads. Only used post merge.
DEFAULT_GAS_LIMIT=30000000

# An alias for --builder.selection default for the builder flow, ignored if --builder.selection is explicitly provided
BUILDER=

# Builder block selection strategy default, maxprofit, builderalways, builderonly, executionalways, or executiononly
BUILDER_SELECTION=executiononly

# Percentage multiplier the block producing beacon node must apply to boost (>100) or dampen (<100) builder block value for selection against execution block. The multiplier is ignored if --builder.selection is set to anything other than maxprofit
BUILDER_BOOST_FACTOR=100

# Enable/disable usage of produceBlockV3 for block production, is auto enabled on deneb+ blocks
USE_PRODUCE_BLOCK_V3=

# Validations to be run by beacon node for the signed block prior to publishing
BROADCAST_VALIDATION=gossip

# Request fetching local block in blinded format for produceBlockV3
BLINDED_LOCAL=false

# Path(s) to a directory or single file path to validator keystores, i.e. Launchpad validators
IMPORT_KEYSTORES=./keystores/*.json

# Path to a file with password to decrypt all keystores from importKeystores option
IMPORT_KEYSTORES_PASSWORD=./password.txt

# Enables Doppelganger protection
DOPPELGANGER_PROTECTION=

# URL to connect to an external signing server
EXTERNAL_SIGNER_URL=

# List of validator public keys used by an external signer. May also provide a single string of comma-separated public keys
EXTERNAL_SIGNER_PUBKEYS=

# Fetch the list of public keys to validate from an external signer. Cannot be used in combination with --externalSigner.pubkeys
EXTERNAL_SIGNER_FETCH=

# Interval in milliseconds between fetching the list of public keys from external signer, once per epoch by default
EXTERNAL_SIGNER_FETCH_INTERVAL=

# Enables specific features required to run as part of a distributed validator cluster
DISTRIBUTED=

# Enable the Prometheus metrics HTTP server
METRICS=false

# Listen TCP port for the Prometheus metrics HTTP server
METRICS_PORT=5064

# Listen address for the Prometheus metrics HTTP server
METRICS_ADDRESS="127.0.0.1"

# Enables monitoring service for sending clients stats to the specified endpoint of a remote service (e.g. beaconcha.in)
MONITORING_ENDPOINT=

# Interval in milliseconds between sending client stats to the remote service
MONITORING_INTERVAL=60000

# Addresses to connect to BeaconNode
SLASHING_PROTECTION_BEACON_NODES=http://127.0.0.1:9596

# If genesisValidatorsRoot can't be fetched from the Beacon node, use a zero hash
SLASHING_PROTECTION_FORCE=

# The slashing protection interchange file to import (.json).
SLASHING_PROTECTION_IMPORT_FILE=

# The slashing protection interchange file to export to (.json).
SLASHING_PROTECTION_EXPORT_FILE=

# Export slashing protection data only for a given subset of public keys
SLASHING_PROTECTION_EXPORT_PUBKEYS=

# Public keys to exit
VOLUNTARY_EXIT_PUBKEYS=

# The epoch upon which to submit the voluntary exit. If no value is provided, then we default to the current epoch.
VOLUNTARY_EXIT_EPOCH=

# Skip confirmation prompt
VOLUNTARY_EXIT_YES=

# Validator public key for which to set withdrawal address hence enabling withdrawals
BLS_TO_EXECUTION_CHANGE_PUBLIC_KEY=

# Bls withdrawals private key to sign the message
BLS_TO_EXECUTION_CHANGE_FROM_BLS_PRIVKEY=

# Address to which the validator's balances will be set to be withdrawn.
BLS_TO_EXECUTION_CHANGE_TO_EXECUTION_ADDRESS=
