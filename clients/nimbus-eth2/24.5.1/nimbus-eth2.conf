# Loads the configuration from a TOML file.
NIMBUS_ETH2_CONFIG_FILE=

# Sets the log level for process and topics (e.g. "DEBUG; TRACE:discv5,libp2p; REQUIRED:none; DISABLED:none") [=INFO].
NIMBUS_ETH2_LOG_LEVEL=

# Specifies a path for the written JSON log file (deprecated).
NIMBUS_ETH2_LOG_FILE=

# The Eth2 network to join [=mainnet].
NIMBUS_ETH2_NETWORK=

# The directory where nimbus will store all blockchain data.
NIMBUS_ETH2_DATA_DIR=

# A directory containing validator keystores.
NIMBUS_ETH2_VALIDATORS_DIR=

# Remote Web3Signer URL that will be used as a source of validators.
NIMBUS_ETH2_VERIFYING_WEB3_SIGNER_URL=

# The field path of a block property that will be sent for verification to the verifying Web3Signer (for example ".execution_payload.fee_recipient").
NIMBUS_ETH2_PROVEN_BLOCK_PROPERTY=

# Remote Web3Signer URL that will be used as a source of validators.
NIMBUS_ETH2_WEB3_SIGNER_URL=

# Number of seconds between validator list updates [=3600].
NIMBUS_ETH2_WEB3_SIGNER_UPDATE_INTERVAL=

# A directory containing validator keystore passwords.
NIMBUS_ETH2_SECRETS_DIR=

# A directory containing wallet files.
NIMBUS_ETH2_WALLETS_DIR=

# One or more execution layer Engine API URLs.
NIMBUS_ETH2_WEB3_URL=

# One or more execution layer Engine API URLs.
NIMBUS_ETH2_EL=

# Don't use an EL. The node will remain optimistically synced and won't be able to perform validator duties [=false].
NIMBUS_ETH2_NO_EL=

# Do not display interactive prompts. Quit on missing configuration.
NIMBUS_ETH2_NON_INTERACTIVE=

# Source of network (secp256k1) private key file (random|<path>) [=random].
NIMBUS_ETH2_NETKEY_FILE=

# Use pre-generated INSECURE password for network private key file [=false].
NIMBUS_ETH2_INSECURE_NETKEY_PASSWORD=

# Node agent string which is used as identifier in network [=nimbus].
NIMBUS_ETH2_AGENT_STRING=

# Subscribe to all subnet topics when gossiping [=false].
NIMBUS_ETH2_SUBSCRIBE_ALL_SUBNETS=

# Number of worker threads ("0" = use as many threads as there are CPU cores available) [=0].
NIMBUS_ETH2_NUM_THREADS=

# A file containing the hex-encoded 256 bit secret key to be used for verifying/generating JWT tokens.
NIMBUS_ETH2_JWT_SECRET=

# Specifies one or more bootstrap nodes to use when connecting to the network.
NIMBUS_ETH2_BOOTSTRAP_NODE=

# Specifies a line-delimited file of bootstrap Ethereum network addresses.
NIMBUS_ETH2_BOOTSTRAP_FILE=

# Listening address for the Ethereum LibP2P and Discovery v5 traffic [=*].
NIMBUS_ETH2_LISTEN_ADDRESS=

# Listening TCP port for Ethereum LibP2P traffic [=9000].
NIMBUS_ETH2_TCP_PORT=

# Listening UDP port for node discovery [=9000].
NIMBUS_ETH2_UDP_PORT=

# The target number of peers to connect to [=160].
NIMBUS_ETH2_MAX_PEERS=

# The maximum number of peers to connect to. Defaults to maxPeers * 1.5.
NIMBUS_ETH2_HARD_MAX_PEERS=

# Specify method to use for determining public address. Must be one of: any, none, upnp, pmp, extip:<IP> [=any].
NIMBUS_ETH2_NAT=

# Discovery can automatically update its ENR with the IP address and UDP port as seen by other nodes it communicates with. This option allows to enable/disable this functionality [=false].
NIMBUS_ETH2_ENR_AUTO_UPDATE=

# Weak subjectivity checkpoint in the format block_root:epoch_number.
NIMBUS_ETH2_WEAK_SUBJECTIVITY_CHECKPOINT=

# External beacon API to use for syncing (on empty database).
NIMBUS_ETH2_EXTERNAL_BEACON_API_URL=

# Accelerate sync using light client [=true].
NIMBUS_ETH2_SYNC_LIGHT_CLIENT=

# Recent trusted finalized block root to sync from external beacon API (with `--external-beacon-api-url`). Uses the light client sync protocol to obtain the latest finalized checkpoint (LC is initialized from trusted block root).
NIMBUS_ETH2_TRUSTED_BLOCK_ROOT=

# Recent trusted finalized state root to sync from external beacon API (with `--external-beacon-api-url`).
NIMBUS_ETH2_TRUSTED_STATE_ROOT=

# SSZ file specifying a recent finalized state.
NIMBUS_ETH2_FINALIZED_CHECKPOINT_STATE=

# SSZ file specifying the genesis state of the network (for networks without a built-in genesis state).
NIMBUS_ETH2_GENESIS_STATE=

# URL for obtaining the genesis state of the network (for networks without a built-in genesis state).
NIMBUS_ETH2_GENESIS_STATE_URL=

# SSZ file specifying a recent finalized EIP-4881 deposit tree snapshot.
NIMBUS_ETH2_FINALIZED_DEPOSIT_TREE_SNAPSHOT=

# A name for this node that will appear in the logs. If you set this to 'auto', a persistent automatically generated ID will be selected for each --data-dir folder.
NIMBUS_ETH2_NODE_NAME=

# The graffiti value that will appear in proposed blocks. You can use a 0x-prefixed hex encoded string to specify raw bytes.
NIMBUS_ETH2_GRAFFITI=

# Enable the metrics server [=false].
NIMBUS_ETH2_METRICS=

# Listening address of the metrics server [=127.0.0.1].
NIMBUS_ETH2_METRICS_ADDRESS=

# Listening HTTP port of the metrics server [=8008].
NIMBUS_ETH2_METRICS_PORT=

# Display a status bar at the bottom of the terminal screen [=true].
NIMBUS_ETH2_STATUS_BAR=

# Textual template for the contents of the status bar.
NIMBUS_ETH2_STATUS_BAR_CONTENTS=

# Enable the REST server [=false].
NIMBUS_ETH2_REST=

# Port for the REST server [=5052].
NIMBUS_ETH2_REST_PORT=

# Listening address of the REST server [=127.0.0.1].
NIMBUS_ETH2_REST_ADDRESS=

# Limit the access to the REST API to a particular hostname (for CORS-enabled clients such as browsers).
NIMBUS_ETH2_REST_ALLOW_ORIGIN=

# The maximum number of recently accessed states that are kept in memory. Speeds up requests obtaining information for consecutive slots or epochs. [=3].
NIMBUS_ETH2_REST_STATECACHE_SIZE=

# The number of seconds to keep recently accessed states in memory [=60].
NIMBUS_ETH2_REST_STATECACHE_TTL=

# The number of seconds to wait until complete REST request will be received [=infinite].
NIMBUS_ETH2_REST_REQUEST_TIMEOUT=

# Maximum size of REST request body (kilobytes) [=16384].
NIMBUS_ETH2_REST_MAX_BODY_SIZE=

# Maximum size of REST request headers (kilobytes) [=128].
NIMBUS_ETH2_REST_MAX_HEADERS_SIZE=

# Enable the REST keymanager API [=false].
NIMBUS_ETH2_KEYMANAGER=

# Listening port for the REST keymanager API [=5052].
NIMBUS_ETH2_KEYMANAGER_PORT=

# Listening port for the REST keymanager API [=127.0.0.1].
NIMBUS_ETH2_KEYMANAGER_ADDRESS=

# Limit the access to the Keymanager API to a particular hostname (for CORS-enabled clients such as browsers).
NIMBUS_ETH2_KEYMANAGER_ALLOW_ORIGIN=

# A file specifying the authorization token required for accessing the keymanager API.
NIMBUS_ETH2_KEYMANAGER_TOKEN_FILE=

# Serve data for enabling light clients to stay in sync with the network [=true].
NIMBUS_ETH2_LIGHT_CLIENT_DATA_SERVE=

# Which classes of light client data to import. Must be one of: none, only-new, full (slow startup), on-demand (may miss validator duties) [=only-new].
NIMBUS_ETH2_LIGHT_CLIENT_DATA_IMPORT_MODE=

# Maximum number of sync committee periods to retain light client data.
NIMBUS_ETH2_LIGHT_CLIENT_DATA_MAX_PERIODS=

# Disable the push model (the beacon node tells a signing process with the private keys of the validators what to sign and when) and load the validators in the beacon node itself [=true].
NIMBUS_ETH2_IN_PROCESS_VALIDATORS=

# Enable Discovery v5 [=true].
NIMBUS_ETH2_DISCV5=

# Write SSZ dumps of blocks, attestations and states to data dir [=false].
NIMBUS_ETH2_DUMP=

# The list of privileged, secure and known peers to connect and maintain the connection to. This requires a not random netkey-file. In the multiaddress format like: /ip4/<address>/tcp/<port>/p2p/<peerId-public-key>, or enr format (enr:-xx). Peering agreements are established out of band and must be reciprocal.
NIMBUS_ETH2_DIRECT_PEER=

# If enabled, the beacon node prudently listens for 2 epochs for attestations from a validator with the same index (a doppelganger), before sending an attestation itself. This protects against slashing (due to double-voting) but means you will miss two attestations when restarting. [=true].
NIMBUS_ETH2_DOPPELGANGER_DETECTION=

# Monitor validator activity automatically for validators active on this beacon node [=true].
NIMBUS_ETH2_VALIDATOR_MONITOR_AUTO=

# One or more validators to monitor - works best when --subscribe-all-subnets is enabled.
NIMBUS_ETH2_VALIDATOR_MONITOR_PUBKEY=

# Publish detailed metrics for each validator individually - may incur significant overhead with large numbers of validators [=false].
NIMBUS_ETH2_VALIDATOR_MONITOR_DETAILS=

# Suggested fee recipient.
NIMBUS_ETH2_SUGGESTED_FEE_RECIPIENT=

# Suggested gas limit [=defaultGasLimit].
NIMBUS_ETH2_SUGGESTED_GAS_LIMIT=

# Enable external payload builder [=false].
NIMBUS_ETH2_PAYLOAD_BUILDER=

# Payload builder URL.
NIMBUS_ETH2_PAYLOAD_BUILDER_URL=

# Increase execution layer block values for builder bid comparison by a percentage [=10].
NIMBUS_ETH2_LOCAL_BLOCK_VALUE_BOOST=

# Retention strategy for historical data (archive/prune) [=HistoryMode.Prune].
NIMBUS_ETH2_HISTORY=
