# Loads the configuration from a TOML file.
NIMBUS_ETH2_CONFIG_FILE=

# The directory where nimbus will store all blockchain data.
NIMBUS_ETH2_DATA_DIR=

# Do not display interactive prompts. Quit on missing configuration.
NIMBUS_ETH2_NON_INTERACTIVE=

# Weak subjectivity checkpoint in the format block_root:epoch_number.
NIMBUS_ETH2_WEAK_SUBJECTIVITY_CHECKPOINT=

# External beacon API to use for syncing (on empty database).
NIMBUS_ETH2_EXTERNAL_BEACON_API_URL=

# Accelerate sync using light client [=true].
NIMBUS_ETH2_SYNC_LIGHT_CLIENT=

# Recent trusted finalized block root to sync from external beacon API (with `--external-beacon-api-url`). Uses the light client sync protocol to obtain the latest finalized checkpoint (LC is initialized from trusted block root).
NIMBUS_ETH2_TRUSTED_BLOCK_ROOT=

# Recent trusted finalized state root to sync from external beacon API (with `--external-beacon-api-url`).
NIMBUS_ETH2_TRUSTED_STATE_ROOT=

# SSZ file specifying a recent finalized state.
NIMBUS_ETH2_FINALIZED_CHECKPOINT_STATE=


# SSZ file specifying a recent finalized EIP-4881 deposit tree snapshot.
NIMBUS_ETH2_FINALIZED_DEPOSIT_TREE_SNAPSHOT=

# A name for this node that will appear in the logs. If you set this to 'auto', a persistent automatically generated ID will be selected for each --data-dir folder.
NIMBUS_ETH2_NODE_NAME=

# The graffiti value that will appear in proposed blocks. You can use a 0x-prefixed hex encoded string to specify raw bytes.
NIMBUS_ETH2_GRAFFITI=

# Display a status bar at the bottom of the terminal screen [=true].
NIMBUS_ETH2_STATUS_BAR=

# Textual template for the contents of the status bar.
NIMBUS_ETH2_STATUS_BAR_CONTENTS=

# Serve data for enabling light clients to stay in sync with the network [=true].
NIMBUS_ETH2_LIGHT_CLIENT_DATA_SERVE=

# Which classes of light client data to import. Must be one of: none, only-new, full (slow startup), on-demand (may miss validator duties) [=only-new].
NIMBUS_ETH2_LIGHT_CLIENT_DATA_IMPORT_MODE=

# Maximum number of sync committee periods to retain light client data.
NIMBUS_ETH2_LIGHT_CLIENT_DATA_MAX_PERIODS=

# Enable Discovery v5 [=true].
NIMBUS_ETH2_DISCV5=

# Write SSZ dumps of blocks, attestations and states to data dir [=false].
NIMBUS_ETH2_DUMP=

# The list of privileged, secure and known peers to connect and maintain the connection to. This requires a not random netkey-file. In the multiaddress format like: /ip4/<address>/tcp/<port>/p2p/<peerId-public-key>, or enr format (enr:-xx). Peering agreements are established out of band and must be reciprocal.
NIMBUS_ETH2_DIRECT_PEER=

# If enabled, the beacon node prudently listens for 2 epochs for attestations from a validator with the same index (a doppelganger), before sending an attestation itself. This protects against slashing (due to double-voting) but means you will miss two attestations when restarting. [=true].
NIMBUS_ETH2_DOPPELGANGER_DETECTION=

# Suggested fee recipient.
NIMBUS_ETH2_SUGGESTED_FEE_RECIPIENT=

# Suggested gas limit [=defaultGasLimit].
NIMBUS_ETH2_SUGGESTED_GAS_LIMIT=

# Retention strategy for historical data (archive/prune) [=HistoryMode.Prune].
NIMBUS_ETH2_HISTORY=
