# This is the environment configuration file for the Prysm beacon chain.
# Customize the values as needed for your specific use case.

# General Options

# Accepts Terms and Conditions (for non-interactive environments).
ACCEPT_TERMS_OF_USE=false

# Specifies the timeout value for API requests in seconds.
API_TIMEOUT=120

# The address of bootstrap node. Beacon node will connect for peer discovery via DHT.
# Multiple nodes can be passed by using the flag multiple times but not comma-separated.
# You can also pass YAML files containing multiple nodes.
BOOTSTRAP_NODE="enr:-KG4QNTx85fjxABbSq_Rta9wy56nQ1fHK0PewJbGjLm1M4bMGx5-3Qq4ZX2-iFJ0pys_O90sVXNNOxp2E7afBsGsBrgDhGV0aDKQu6TalgMAAAD__________4JpZIJ2NIJpcIQEnfA2iXNlY3AyNTZrMaECGXWQ-rQ2KZKRH1aOW4IlPDBkY4XDphxg9pxKytFCkayDdGNwgiMog3VkcIIjKA"

# Path to a YAML file with chain config values.
CHAIN_CONFIG_FILE=

# Prompt for clearing any previously stored data at the data directory.
CLEAR_DB=false

# Filepath to a yaml file with flag values.
CONFIG_FILE=

# Data directory for the databases.
DATADIR="/home/eniko/.eth2"

# Disables monitoring service.
DISABLE_MONITORING=false

# Enables the E2E testing config, only for use within end-to-end testing.
E2E_CONFIG=false

# Enables request tracing.
ENABLE_TRACING=false

# Clears any previously stored data at the data directory.
FORCE_CLEAR_DB=false

# Integer to define max receive message call size (in bytes).
# If serving a public gRPC server, set this to a more reasonable size to avoid resource exhaustion from large messages.
# Validators with as many as 10000 keys can be run with a max message size of less than 50Mb.
# The default here is set to a very high value for local users.
GRPC_MAX_MSG_SIZE=2147483647

# Specifies the upper limit of goroutines running before a status check fails.
MAX_GOROUTINES=5000

# Uses minimal config with parameters as defined in the spec.
MINIMAL_CONFIG=false

# List of validator indices to track performance.
MONITOR_INDICES=

# Host used for listening and responding metrics for prometheus.
MONITORING_HOST="127.0.0.1"

# Port used to listening and respond metrics for Prometheus.
MONITORING_PORT=8080

# Enable only local network p2p and do not connect to cloud bootstrap nodes.
NO_DISCOVERY=false

# The port used by libp2p.
P2P_TCP_PORT=13000

# The port used by discv5.
P2P_UDP_PORT=12000

# The address of relay node. The beacon node will connect to the relay node and advertise their address via the relay node to other peers.
RELAY_NODE=

# Filepath to the backed-up database file which will be used to restore the database.
RESTORE_SOURCE_FILE=

# Target directory of the restored database.
RESTORE_TARGET_DIR="/home/eniko/.eth2"

# Max number of items returned per page in RPC responses for paginated endpoints.
RPC_MAX_PAGE_SIZE=0

# Indicates what fraction of p2p messages are sampled for tracing.
TRACE_SAMPLE_FRACTION=0.2

# Tracing endpoint defines where beacon chain traces are exposed to Jaeger.
TRACING_ENDPOINT="http://127.0.0.1:14268/api/traces"

# Name to apply to tracing tag process_name.
TRACING_PROCESS_NAME=

# Logging verbosity. (trace, debug, info, warn, error, fatal, panic)
VERBOSITY="info"

# Debug Options

# Turns on block profiling with the given rate.
BLOCKPROFILERATE=0

# Writes CPU profile to the given file.
CPUPROFILE=

# Turns on memory profiling with the given rate.
MEMPROFILERATE=524288

# Turns on mutex profiling with the given rate.
MUTEXPROFILEFRACTION=0

# Enables the pprof HTTP server.
PPROF=false

# pprof HTTP server listening interface.
PPROFADDR="127.0.0.1"

# pprof HTTP server listening port.
PPROFPORT=6060

# Writes execution trace to the given file.
TRACE=

# Beacon-Chain Options

# Number of blocks per backfill batch. A larger number will request more blocks at once from peers,
# but also consume more system memory to hold batches in memory during processing.
# This has a multiplicative effect with backfill-worker-count.
BACKFILL_BATCH_SIZE=32

# Specifies the oldest slot that backfill should download. If this value is greater than current_slot - MIN_EPOCHS_FOR_BLOCK_REQUESTS, it will be ignored with a warning log.
BACKFILL_OLDEST_SLOT=0

# Number of concurrent backfill batch requests. A larger number will better utilize network resources,
# up to a system-dependent limit, but will also consume more system memory to hold batches in memory during processing.
# Multiply by backfill-batch-size and average block size (~2MB before deneb) to find the right number for your system.
# This has a multiplicative effect with backfill-batch-size.
BACKFILL_WORKER_COUNT=2

# The amount of blobs the local peer is bounded to request and respond to in a batch.
BLOB_BATCH_LIMIT=64

# The factor by which blob batch limit may increase on burst.
BLOB_BATCH_LIMIT_BURST_FACTOR=2

# Location for blob storage. Default location will be a 'blobs' directory next to the beacon db.
BLOB_PATH=

# Override the default blob retention period (measured in epochs). The node will exit with an error at startup if the value is less than the default of 4096 epochs.
BLOB_RETENTION_EPOCHS=4096

# The amount of blocks the local peer is bounded to request and respond to in a batch. Maximum 128.
BLOCK_BATCH_LIMIT=64

# The factor by which block batch limit may increase on burst.
BLOCK_BATCH_LIMIT_BURST_FACTOR=2

# Sets the chain id of the beacon chain.
CHAIN_ID=0

# Rather than syncing from genesis, you can start processing from a ssz-serialized BeaconState+Block.
# This flag allows you to specify a local file containing the checkpoint Block to load.
CHECKPOINT_BLOCK=

# Rather than syncing from genesis, you can start processing from a ssz-serialized BeaconState+Block.
# This flag allows you to specify a local file containing the checkpoint BeaconState to load.
CHECKPOINT_STATE=

# URL of a synced beacon node to trust in obtaining checkpoint sync data. As an additional safety measure,
# it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag.
CHECKPOINT_SYNC_URL=

# The eth1 block in which the deposit contract was deployed.
CONTRACT_DEPLOYMENT_BLOCK=11184524

# Deposit contract address. Beacon chain node will listen logs coming from the deposit contract to determine when validator is eligible to participate.
DEPOSIT_CONTRACT="0x00000000219ab540356cBB839Cbe05303d7705Fa"

# Disable the gRPC gateway for JSON-HTTP requests.
DISABLE_GRPC_GATEWAY=false

# Enables the debug rpc service, containing utility endpoints such as /eth/v1alpha1/beacon/state.
ENABLE_DEBUG_RPC_ENDPOINTS=false

# Backfill is still experimental at this time. It will only be enabled if this flag is specified and the node was started using checkpoint sync.
ENABLE_EXPERIMENTAL_BACKFILL=false

# Sets the execution engine timeout (seconds) for execution payload semantics (forkchoiceUpdated, newPayload).
ENGINE_ENDPOINT_TIMEOUT_SECONDS=0

# Sets the maximum number of headers that a deposit log query can fetch.
ETH1_HEADER_REQ_LIMIT=1000

# An execution client http endpoint. Can contain auth header as well in the format.
EXECUTION_ENDPOINT="http://localhost:8551"

# A comma separated list of key value pairs to pass as HTTP headers for all execution client calls.
# Example: --execution-headers=key1=value1,key2=value2
EXECUTION_HEADERS=

# The percentage of freshly allocated data to live data on which the gc will be run again.
GC_PERCENT=100

# URL of a synced beacon node to trust for obtaining genesis state. As an additional safety measure,
# it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag.
GENESIS_BEACON_API_URL=

# Load a genesis state from ssz file. Testnet genesis files can be found in the eth2-clients/eth2-testnets repository on github.
GENESIS_STATE=

# Comma separated list of domains from which to accept cross origin requests (browser enforced).
# This flag has no effect if not used with --grpc-gateway-port.
GRPC_GATEWAY_CORSDOMAIN="http://localhost:4200,http://localhost:7500,http://127.0.0.1:4200,http://127.0.0.1:7500,http://0.0.0.0:4200,http://0.0.0.0:7500,http://localhost:3000,http://0.0.0.0:3000,http://127.0.0.1:3000"

# The host on which the gateway server runs on.
GRPC_GATEWAY_HOST="127.0.0.1"

# The port on which the gateway server runs on.
GRPC_GATEWAY_PORT=3500

# Enables required flags for serving historical data to a slasher client. Results in additional storage usage.
HISTORICAL_SLASHER_NODE=false

# A MEV builder relay string http endpoint, this will be used to interact MEV builder network using API defined in:
# https://ethereum.github.io/builder-specs/#/Builder
HTTP_MEV_RELAY=

# Comma-separated list of API module names. Possible values: prysm,eth.
HTTP_MODULES="prysm,eth"

# Enable mocking of eth1 data votes for proposers to package into blocks.
INTEROP_ETH1DATA_VOTES=false

# JWT claims id. Could be used to identify the client.
JWT_ID=

# REQUIRED if connecting to an execution node via HTTP. Provides a path to a file containing a hex-encoded string
# representing a 32 byte secret used for authentication with an execution node via HTTP. If this is not set,
# all requests to execution nodes via HTTP for consensus-related calls will fail, which will prevent your validators
# from performing their duties. This is not required if using an IPC connection.
JWT_SECRET=

# A percentage boost for local block construction as a Uint64. This is used to prioritize local block construction over relay/builder block construction.
# Boost is an additional percentage to multiple local block value. Use builder block if: builder_bid_value * 100 > local_block_value * (local-block-value-boost + 100)
LOCAL_BLOCK_VALUE_BOOST=10

# Number of consecutive skip slot to fallback from using relay/builder to local execution engine for block construction.
MAX_BUILDER_CONSECUTIVE_MISSED_SLOTS=3

# Number of total skip slot to fallback from using relay/builder to local execution engine for block construction in last epoch rolling window.
MAX_BUILDER_EPOCH_MISSED_SLOTS=0

# Sets the minimum number of peers that a node will attempt to peer with that are subscribed to a subnet.
MINIMUM_PEERS_PER_SUBNET=6

# Sets the network id of the beacon chain.
NETWORK_ID=0

# Host on which the RPC server should listen.
RPC_HOST="127.0.0.1"

# RPC port exposed by a beacon node.
RPC_PORT=4000

# Directory for the slasher database.
SLASHER_DATADIR="/home/eniko/.eth2"

# The slot durations of when an archived state gets saved in the beaconDB.
SLOTS_PER_ARCHIVE_POINT=2048

# Subscribe to all possible attestation and sync subnets.
SUBSCRIBE_ALL_SUBNETS=false

# Certificate for secure gRPC. Pass this and the tls-key flag in order to use gRPC securely.
TLS_CERT=

# Key for secure gRPC. Pass this and the tls-cert flag in order to use gRPC securely.
TLS_KEY=

# Input in block_root:epoch_number format. This guarantees that syncing leads to the given Weak Subjectivity Checkpoint along the canonical chain.
# If such a sync is not possible, the node will treat it as a critical and irrecoverable failure.
WEAK_SUBJECTIVITY_CHECKPOINT=

# Merge Options

# Post bellatrix, this address will receive the transaction fees produced by any blocks from this node.
# Default to junk whilst bellatrix is in development state. Validator client can override this value through the preparebeaconproposer api.
SUGGESTED_FEE_RECIPIENT="0x0000000000000000000000000000000000000000"

# Sets the block hash epoch to manual overrides the default TERMINAL_BLOCK_HASH_ACTIVATION_EPOCH value.
# WARNING: This flag should be used only if you have a clear understanding that community has decided to override the terminal block hash activation epoch.
# Incorrect usage will result in your node experience consensus failure.
TERMINAL_BLOCK_HASH_EPOCH_OVERRIDE=0

# Sets the block hash to manual overrides the default TERMINAL_BLOCK_HASH value.
# WARNING: This flag should be used only if you have a clear understanding that community has decided to override the terminal block hash.
# Incorrect usage will result in your node experience consensus failure.
TERMINAL_BLOCK_HASH_OVERRIDE=

# Sets the total difficulty to manual overrides the default TERMINAL_TOTAL_DIFFICULTY value.
# WARNING: This flag should be used only if you have a clear understanding that community has decided to override the terminal difficulty.
# Incorrect usage will result in your node experience consensus failure.
TERMINAL_TOTAL_DIFFICULTY_OVERRIDE=

# P2P Options

# Enable the service (Beacon chain or Validator) to use UPnP when possible.
ENABLE_UPNP=false

# The required number of valid peers to connect with before syncing.
MIN_SYNC_PEERS=3

# The CIDR subnet for allowing only certain peer connections. Using "public" would allow only public subnets.
# Example: 192.168.0.0/16 would permit connections to peers on your local network only. The default is to accept all connections.
P2P_ALLOWLIST=

# The CIDR subnets for denying certainty peer connections. Using "private" would deny all private subnets.
# Example: 192.168.0.0/16 would deny connections from peers on your local network only. The default is to accept all connections.
P2P_DENYLIST=

# The DNS address advertised by libp2p. This may be used to advertise an external DNS.
P2P_HOST_DNS=

# The IP address advertised by libp2p. This may be used to advertise an external IP.
P2P_HOST_IP=

# The local ip address to listen for incoming data.
P2P_LOCAL_IP=

# The max number of p2p peers to maintain.
P2P_MAX_PEERS=70

# The file containing the metadata to communicate with other peers.
P2P_METADATA=

# The file containing the private key to use in communications with other peers.
P2P_PRIV_KEY=

# Enables the peer id of the node to be fixed by saving the generated network key to the default key path.
P2P_STATIC_ID=false

# Connect with this peer, this flag may be used multiple times. This peer is recognized as a trusted peer.
PEER=

# The size of the pubsub validation and outbound queue for the node.
PUBSUB_QUEUE_SIZE=1000

# Log Options

# Specifies log file name, relative or absolute.
LOG_FILE=

# Specifies log formatting. Supports: text, json, fluentd, journald.
LOG_FORMAT="text"

# Features Options

# Forces new blob files to be fysnc'd before continuing, ensuring durable blob writes.
BLOB_SAVE_FSYNC=false

# Enables experimental features still in development. These features may not be stable.
DEV=false

# Disables broadcasting slashings submitted to the beacon node.
DISABLE_BROADCAST_SLASHINGS=false

# Disables the deposit tree specified in EIP-4881.
DISABLE_EIP_4881=false

# Disables displaying logs for newly connected grpc clients.
DISABLE_GRPC_CONNECTION_LOGGING=false

# (Danger): Disables P2P peer scorer. Do NOT use this in production!
DISABLE_PEER_SCORER=false

# Temporary flag for disabling the validator registration cache instead of using the DB.
# Note: registrations do not clear on restart while using the DB.
DISABLE_REGISTRATION_CACHE=false

# Disables running the libp2p resource manager.
DISABLE_RESOURCE_MANAGER=false

# Disables checking of staking contract deposits when proposing blocks, useful for devnets.
DISABLE_STAKING_CONTRACT_CHECK=false

# Disables identifying invalid signatures if batch verification fails when processing block.
DISABLE_VERBOSE_SIG_VERIFICATION=false

# Turns on the latest and greatest (but potentially unstable) changes to the beacon state.
ENABLE_EXPERIMENTAL_STATE=false

# Enables displaying logs for full ssz data on rejected gossip messages.
ENABLE_FULL_SSZ_DATA_LOGGING=false

# Enables the beacon chain to save historical states in a space efficient manner.
# (Warning): Once enabled, this feature migrates your database in to a new schema and there is no going back.
# At worst, your entire database might get corrupted.
ENABLE_HISTORICAL_STATE_REPRESENTATION=false

# Enables the light client support in the beacon node.
ENABLE_LIGHTCLIENT=false

# Runs Prysm configured for the Holesky test network.
HOLESKY=false

# Writes SSZ states to disk after attempted state transition.
INTEROP_WRITE_SSZ_STATE_TRANSITIONS=false

# Runs on Ethereum main network. This is the default and can be omitted.
MAINNET=true

# Runs Prysm configured for the Prater / Goerli test network.
PRATER_GOERLI=false

# Informs the engine to prepare all local payloads. Useful for relayers and builders.
PREPARE_ALL_PAYLOADS=false

# Saves beacon blocks with full execution payloads instead of execution payload headers in the database.
SAVE_FULL_EXECUTION_PAYLOADS=false

# Writes invalid blobs to temp directory.
SAVE_INVALID_BLOB_TEMP=false

# Writes invalid blocks to temp directory.
SAVE_INVALID_BLOCK_TEMP=false

# Runs Prysm configured for the Sepolia test network.
SEPOLIA=false

# Enables a slasher in the beacon node for detecting slashable offenses.
SLASHER=false

# Interop Options

# Load a genesis state from ssz file. Testnet genesis files can be found in the eth2-clients/eth2-testnets repository on github.
GENESIS_STATE=

# Specify the genesis time for interop genesis state generation. Must be used with --interop-num-validators.
INTEROP_GENESIS_TIME=0

# Specify number of genesis validators to generate for interop. Must be used with --interop-genesis-time.
INTEROP_NUM_VALIDATORS=0
