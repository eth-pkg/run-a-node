# Explicitly disables syncing of deposit logs from the execution node. 
# This overrides any previous option that depends on it. Useful if you intend to run a non-validating beacon node.
LIGHTHOUSE_CLI_BN_DISABLE_DEPOSIT_CONTRACT_SYNC=

# Standard option for a staking beacon node. 
# This will enable the HTTP server on localhost:5052 and import deposit logs from the execution node.
# This is equivalent to `--http` on merge-ready networks, or `--http --eth1` pre-merge.
LIGHTHOUSE_CLI_BN_STAKING=

# The margin for blob pruning in epochs. The oldest blobs are pruned up until data_availability_boundary 
# - blob_prune_margin_epochs. [default: 0]
LIGHTHOUSE_CLI_BN_BLOB_PRUNE_MARGIN_EPOCHS=

# Enable the graphical user interface and all its requirements. 
# This enables --http and --validator-monitor-auto and enables SSE logging.
LIGHTHOUSE_CLI_BN_GUI=

# After a checkpoint sync, reconstruct historic states in the database. 
# This requires syncing all the way back to genesis.
LIGHTHOUSE_CLI_BN_RECONSTRUCT_HISTORIC_STATES=

# Enable or disable automatic compaction of the database on finalization. [default: true]
LIGHTHOUSE_CLI_BN_AUTO_COMPACT_DB=

# The margin for blob pruning in epochs. The oldest blobs are pruned up until data_availability_boundary 
# - blob_prune_margin_epochs. [default: 0]
LIGHTHOUSE_CLI_BN_BLOB_PRUNE_MARGIN_EPOCHS=

# If present the node will connect to an eth1 node. This is required for block production, you must use this flag if you wish to serve a validator.
LIGHTHOUSE_CLI_BN_ETH1=

# If present, the chain database will be deleted. Use with caution.
LIGHTHOUSE_CLI_BN_PURGE_DB=

# When present, Lighthouse will forget the payload statuses of any already-imported blocks.
# This can assist in the recovery from a consensus failure caused by the execution layer.
LIGHTHOUSE_CLI_BN_RESET_PAYLOAD_STATUSES=

# Enable the Prometheus metrics HTTP server. Disabled by default.
LIGHTHOUSE_CLI_BN_METRICS=

# Sets this beacon node at be a block proposer only node. 
# This will run the beacon node in a minimal configuration that is sufficient for block publishing only.
# This flag should be used for a beacon node being referenced by validator client using the --proposer-node flag. 
# This configuration is for enabling more secure setups.
LIGHTHOUSE_CLI_BN_PROPOSER_ONLY=

# Force outputting colors when emitting logs to the terminal.
LIGHTHOUSE_CLI_BN_LOG_COLOR=

# Enable the RESTful HTTP API server. Disabled by default.
LIGHTHOUSE_CLI_BN_HTTP=

# Import and aggregate all attestations, regardless of validator subscriptions. 
# This will only import attestations from already-subscribed subnets, 
# use with --subscribe-all-subnets to ensure all attestations are received for import.
LIGHTHOUSE_CLI_BN_IMPORT_ALL_ATTESTATIONS=

# Enable or disable automatic compaction of the database on finalization. [default: true]
LIGHTHOUSE_CLI_BN_AUTO_COMPACT_DB=

# Maximum delay after the start of the slot at which to propose a reorging block. 
# Lower values can prevent failed reorgs by ensuring the block has ample time to propagate and be processed by the network. 
# The default is 1/12th of a slot (1 second on mainnet).
LIGHTHOUSE_CLI_BN_PROPOSER_REORG_CUTOFF=

# Comma-separated list of integer offsets which can be used to avoid proposing reorging blocks at certain slots. 
# An offset of N means that reorging proposals will not be attempted at any slot such that `slot % SLOTS_PER_EPOCH == N`.
# By default only re-orgs at offset 0 will be avoided. Any offsets supplied with this flag will impose additional restrictions.
LIGHTHOUSE_CLI_BN_PROPOSER_REORG_DISALLOWED_OFFSETS=

# Maximum number of epochs since finalization at which proposer reorgs are allowed. Default: 2
LIGHTHOUSE_CLI_BN_PROPOSER_REORG_EPOCHS_SINCE_FINALIZATION=

# Percentage of vote weight below which to attempt a proposer reorg. Default: 20%
LIGHTHOUSE_CLI_BN_PROPOSER_REORG_THRESHOLD=

# Purges the eth1 block and deposit caches.
LIGHTHOUSE_CLI_BN_ETH1_PURGE_CACHE=

# Subscribe to all subnets regardless of validator count. 
# This will also advertise the beacon node as being long-lived subscribed to all subnets.
LIGHTHOUSE_CLI_BN_SUBSCRIBE_ALL_SUBNETS=

# Enables the automatic detection and monitoring of validators connected to the HTTP API and using the subnet subscription endpoint. 
# This generally has the effect of providing additional logging and metrics for locally controlled validators.
LIGHTHOUSE_CLI_BN_VALIDATOR_MONITOR_AUTO=
