# Enable validators doppelganger detection. Default: false
TEKU_CLI_DOPPELGANGER_DETECTION_ENABLED=

# Enable terminating the process if no validator keys are found during startup. Default: false
TEKU_CLI_EXIT_WHEN_NO_VALIDATOR_KEYS_ENABLED=

# If enabled and an owned validator key is detected as slashed, the node will terminate. In this case, the service should not be restarted. Default: false
TEKU_CLI_SHUT_DOWN_WHEN_VALIDATOR_SLASHED_ENABLED=

# Restrict local signing to a single operation at a time. Default: true
TEKU_CLI_VALIDATOR_IS_LOCAL_SLASHING_PROTECTION_SYNCHRONIZED_ENABLED=

# <KEY_DIR>:<PASS_DIR> | <KEY_FILE>:<PASS_FILE> will find <KEY_DIR>/**.json, and expect to find <PASS_DIR>/**.txt. <KEY_FILE>:<PASS_FILE> will expect that the file <KEY_FILE> exists, and the file containing the password for it is <PASS_FILE>. Default: []
TEKU_CLI_VALIDATOR_KEYS=

# Enable validators registration to builder infrastructure. Default: false
TEKU_CLI_VALIDATORS_BUILDER_REGISTRATION_DEFAULT_ENABLED=

# Generate attestations as soon as a block is known, rather than delaying until the attestation is due. Default: true
TEKU_CLI_VALIDATORS_EARLY_ATTESTATIONS_ENABLED=

# Keystore (PKCS12/JKS) to use for TLS mutual authentication with external signer
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_KEYSTORE=

# Password file to decrypt keystore (PKCS12/JKS) that will be used for TLS mutual authentication with external signer
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_KEYSTORE_PASSWORD_FILE=

# The list of external signer public keys, or a URL to load the keys from. Default: []
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_PUBLIC_KEYS=

# Enable internal slashing protection for external signers. Default: true
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_SLASHING_PROTECTION_ENABLED=

# Timeout (in milliseconds) for the external signing service. Default: 5000
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_TIMEOUT=

# Keystore (PKCS12/JKS) to trust external signer's self-signed certificate
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_TRUSTSTORE=

# Password file to decrypt keystore (PKCS12/JKS) that will be used to trust external signer's self-signed certificate
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_TRUSTSTORE_PASSWORD_FILE=

# URL for the external signing service
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_URL=

# Graffiti value to include during block creation. Value gets converted to bytes and padded to Bytes32.
TEKU_CLI_VALIDATORS_GRAFFITI=

# Appends CL and EL clients information with a space to user's graffiti when producing a block on the Beacon Node. (Valid values: AUTO, CLIENT_CODES, DISABLED). Default: AUTO
TEKU_CLI_VALIDATORS_GRAFFITI_CLIENT_APPEND_FORMAT=

# File to load graffiti value to include during block creation. Value gets converted to bytes and padded to Bytes32. Takes precedence over --validators-graffiti. If the file can not be read, the --validators-graffiti value is used as a fallback.
TEKU_CLI_VALIDATORS_GRAFFITI_FILE=

# Enable locking validator keystore files. Default: true
TEKU_CLI_VALIDATORS_KEYSTORE_LOCKING_ENABLED=

# Set strategy for handling performance tracking. Valid values: LOGGING, METRICS, ALL, NONE. Default: ALL
TEKU_CLI_VALIDATORS_PERFORMANCE_TRACKING_MODE=

# Use blinded blocks when in block production duties. Default: false
TEKU_CLI_VALIDATORS_PROPOSER_BLINDED_BLOCKS_ENABLED=

# Remote URL or local file path to load proposer configuration from
TEKU_CLI_VALIDATORS_PROPOSER_CONFIG=

# Enable the proposer configuration reload on every proposer preparation (once per epoch). Default: false
TEKU_CLI_VALIDATORS_PROPOSER_CONFIG_REFRESH_ENABLED=

# Default fee recipient sent to the execution engine, which could use it as fee recipient when producing a new execution block.
TEKU_CLI_VALIDATORS_PROPOSER_DEFAULT_FEE_RECIPIENT=
