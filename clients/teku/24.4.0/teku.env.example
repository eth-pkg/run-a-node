# The Checkpointz server that will be used to bootstrap this node.
TEKU_CLI_CHECKPOINT_SYNC_URL=

# Contract address for the deposit contract. Only required when creating a custom network.
TEKU_CLI_ETH1_DEPOSIT_CONTRACT_ADDRESS=

# The genesis state. This value should be a file or URL pointing to an SSZ-encoded finalized checkpoint state.
TEKU_CLI_GENESIS_STATE=

# Allows syncing outside of the weak subjectivity period. Default: false
TEKU_CLI_IGNORE_WEAK_SUBJECTIVITY_PERIOD_ENABLED=

# The initial state. This value should be a file or URL pointing to an SSZ-encoded finalized checkpoint state.
TEKU_CLI_INITIAL_STATE=

# Represents which network to use. Default: mainnet
TEKU_CLI_NETWORK=

# P2P advertised IP (Default: 127.0.0.1)
TEKU_CLI_P2P_ADVERTISED_IP=

# P2P advertised port. The default is the port specified in --p2p-port
TEKU_CLI_P2P_ADVERTISED_PORT=

# Advertised UDP port to external peers. The default is the port specified in --p2p-advertised-port
TEKU_CLI_P2P_ADVERTISED_UDP_PORT=

# Specifies a list of 'direct' peers with which to establish and maintain connections. Default: []
TEKU_CLI_P2P_DIRECT_PEERS=

# List of ENRs of the bootnodes
TEKU_CLI_P2P_DISCOVERY_BOOTNODES=

# Enables discv5 discovery. Default: true
TEKU_CLI_P2P_DISCOVERY_ENABLED=

# Whether discovery accepts messages and peer records with site local (RFC1918) addresses. Default: false
TEKU_CLI_P2P_DISCOVERY_SITE_LOCAL_ADDRESSES_ENABLED=

# Enables P2P. Default: true
TEKU_CLI_P2P_ENABLED=

# P2P network interface. Default: 0.0.0.0
TEKU_CLI_P2P_INTERFACE=

# Specify the NAT circumvention method to be used, possible values are UPNP, NONE. NONE will require manual router configuration. Default: NONE
TEKU_CLI_P2P_NAT_METHOD=

# Lower bound on the target number of peers. Default: 64
TEKU_CLI_P2P_PEER_LOWER_BOUND=

# Upper bound on the target number of peers. Default: 100
TEKU_CLI_P2P_PEER_UPPER_BOUND=

# P2P port. Default: 9000
TEKU_CLI_P2P_PORT=

# This node's private key file. If not specified, uses or generates a key which is stored within the <beacon-data-dir>.
TEKU_CLI_P2P_PRIVATE_KEY_FILE=

# Specifies a list of 'static' peers with which to establish and maintain connections. Default: []
TEKU_CLI_P2P_STATIC_PEERS=

# Enable validators doppelganger detection. Default: false
TEKU_CLI_DOPPELGANGER_DETECTION_ENABLED=

# Enable terminating the process if no validator keys are found during startup. Default: false
TEKU_CLI_EXIT_WHEN_NO_VALIDATOR_KEYS_ENABLED=

# If enabled and an owned validator key is detected as slashed, the node will terminate. In this case, the service should not be restarted. Default: false
TEKU_CLI_SHUT_DOWN_WHEN_VALIDATOR_SLASHED_ENABLED=

# Restrict local signing to a single operation at a time. Default: true
TEKU_CLI_VALIDATOR_IS_LOCAL_SLASHING_PROTECTION_SYNCHRONIZED_ENABLED=

# <KEY_DIR>:<PASS_DIR> | <KEY_FILE>:<PASS_FILE> will find <KEY_DIR>/**.json, and expect to find <PASS_DIR>/**.txt. <KEY_FILE>:<PASS_FILE> will expect that the file <KEY_FILE> exists, and the file containing the password for it is <PASS_FILE>. Default: []
TEKU_CLI_VALIDATOR_KEYS=

# Enable validators registration to builder infrastructure. Default: false
TEKU_CLI_VALIDATORS_BUILDER_REGISTRATION_DEFAULT_ENABLED=

# Generate attestations as soon as a block is known, rather than delaying until the attestation is due. Default: true
TEKU_CLI_VALIDATORS_EARLY_ATTESTATIONS_ENABLED=

# Keystore (PKCS12/JKS) to use for TLS mutual authentication with external signer
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_KEYSTORE=

# Password file to decrypt keystore (PKCS12/JKS) that will be used for TLS mutual authentication with external signer
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_KEYSTORE_PASSWORD_FILE=

# The list of external signer public keys, or a URL to load the keys from. Default: []
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_PUBLIC_KEYS=

# Enable internal slashing protection for external signers. Default: true
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_SLASHING_PROTECTION_ENABLED=

# Timeout (in milliseconds) for the external signing service. Default: 5000
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_TIMEOUT=

# Keystore (PKCS12/JKS) to trust external signer's self-signed certificate
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_TRUSTSTORE=

# Password file to decrypt keystore (PKCS12/JKS) that will be used to trust external signer's self-signed certificate
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_TRUSTSTORE_PASSWORD_FILE=

# URL for the external signing service
TEKU_CLI_VALIDATORS_EXTERNAL_SIGNER_URL=

# Graffiti value to include during block creation. Value gets converted to bytes and padded to Bytes32.
TEKU_CLI_VALIDATORS_GRAFFITI=

# Appends CL and EL clients information with a space to user's graffiti when producing a block on the Beacon Node. (Valid values: AUTO, CLIENT_CODES, DISABLED). Default: AUTO
TEKU_CLI_VALIDATORS_GRAFFITI_CLIENT_APPEND_FORMAT=

# File to load graffiti value to include during block creation. Value gets converted to bytes and padded to Bytes32. Takes precedence over --validators-graffiti. If the file can not be read, the --validators-graffiti value is used as a fallback.
TEKU_CLI_VALIDATORS_GRAFFITI_FILE=

# Enable locking validator keystore files. Default: true
TEKU_CLI_VALIDATORS_KEYSTORE_LOCKING_ENABLED=

# Set strategy for handling performance tracking. Valid values: LOGGING, METRICS, ALL, NONE. Default: ALL
TEKU_CLI_VALIDATORS_PERFORMANCE_TRACKING_MODE=

# Use blinded blocks when in block production duties. Default: false
TEKU_CLI_VALIDATORS_PROPOSER_BLINDED_BLOCKS_ENABLED=

# Remote URL or local file path to load proposer configuration from
TEKU_CLI_VALIDATORS_PROPOSER_CONFIG=

# Enable the proposer configuration reload on every proposer preparation (once per epoch). Default: false
TEKU_CLI_VALIDATORS_PROPOSER_CONFIG_REFRESH_ENABLED=

# Default fee recipient sent to the execution engine, which could use it as fee recipient when producing a new execution block.
TEKU_CLI_VALIDATORS_PROPOSER_DEFAULT_FEE_RECIPIENT=

# Set the compare factor applied to the builder bid value when comparing it with locally produced payload. Factor is expressed in percentage. Default: 90
TEKU_CLI_BUILDER_BID_COMPARE_FACTOR=

# URL for an external Builder node (optional). Default: null
TEKU_CLI_BUILDER_ENDPOINT=

# Set User-Agent header to teku/v<version> when making a builder bid request to help builders identify clients and versions. Default: true
TEKU_CLI_BUILDER_SET_USER_AGENT_HEADER=

# Use bundled snapshot for most networks and persist deposit tree snapshot. Default: true
TEKU_CLI_DEPOSIT_SNAPSHOT_ENABLED=

# URL for Execution Engine node.
TEKU_CLI_EE_ENDPOINT=

# A unique identifier for the consensus layer client. This identifier will be added to the JWT claims as an 'id' claim.
TEKU_CLI_EE_JWT_CLAIM_ID=

# Location of the file specifying the hex-encoded 256 bit secret key to be used for verifying/generating jwt tokens
TEKU_CLI_EE_JWT_SECRET_FILE=

# Maximum number of blocks to request deposit contract event logs for in a single request. Default: 10000
TEKU_CLI_ETH1_DEPOSIT_CONTRACT_MAX_REQUEST_SIZE=

# URLs for Eth1 nodes. Default: []
TEKU_CLI_ETH1_ENDPOINTS=

# Enables querying EL periodically for the Engine API methods it supports. If incompatibility is detected, there will be a warning raised in the logs. Default: true
TEKU_CLI_EXCHANGE_CAPABILITIES_MONITORING_ENABLED=

# Path to beacon node data. Default: <data-base-path>/beacon
TEKU_CLI_DATA_BEACON_PATH=

# Path to the base directory for storage. Default: $HOME/.local/share/teku
TEKU_CLI_DATA_BASE_PATH=

# Sets the frequency, in slots, at which to store finalized states to disk. This option is ignored if --data-storage-mode is set to PRUNE. Default: 2048
TEKU_CLI_DATA_STORAGE_ARCHIVE_FREQUENCY=

# Sets the strategy for handling historical chain data. Valid values: ARCHIVE, PRUNE, MINIMAL, NOT_SET. Default: NOT_SET
TEKU_CLI_DATA_STORAGE_MODE=

# Store non-canonical blocks and associated blobs if they exist. Default: false
TEKU_CLI_DATA_STORAGE_NON_CANONICAL_BLOCKS_ENABLED=

# Path to validator client data. Default: <data-base-path>/validator
TEKU_CLI_DATA_VALIDATOR_PATH=

# Default: false
TEKU_CLI_RECONSTRUCT_HISTORIC_STATES=

# Track validator liveness and enable requests to the liveness rest api. Default: false
TEKU_CLI_BEACON_LIVENESS_TRACKING_ENABLED=

# Comma separated list of origins to allow, or * to allow any origin. Default: []
TEKU_CLI_REST_API_CORS_ORIGINS=

# Enable swagger-docs and swagger-ui endpoints. Default: false
TEKU_CLI_REST_API_DOCS_ENABLED=

# Enables Beacon Rest API. Default: null
TEKU_CLI_REST_API_ENABLED=

# Comma-separated list of hostnames to allow, or * to allow any host. Default: [127.0.0.1, localhost]
TEKU_CLI_REST_API_HOST_ALLOWLIST=

# Interface of Beacon Rest API. Default: 127.0.0.1
TEKU_CLI_REST_API_INTERFACE=

# Port number of Beacon Rest API.
TEKU_CLI_REST_API_PORT=

# Use the specified file as the bearer token for the validator Rest API
TEKU_CLI_VALIDATOR_API_BEARER_FILE=

# Comma separated list of origins to allow, or * to allow any origin. Default: []
TEKU_CLI_VALIDATOR_API_CORS_ORIGINS=

# Enable swagger-docs and swagger-ui endpoints. Default: false
TEKU_CLI_VALIDATOR_API_DOCS_ENABLED=

# Enables Validator Rest API. Default: false
TEKU_CLI_VALIDATOR_API_ENABLED=

# Comma-separated list of hostnames to allow, or * to allow any host. Default: [127.0.0.1, localhost]
TEKU_CLI_VALIDATOR_API_HOST_ALLOWLIST=

# Interface of Validator Rest API. Default: 127.0.0.1
TEKU_CLI_VALIDATOR_API_INTERFACE=

# Keystore used for ssl for the validator api.
TEKU_CLI_VALIDATOR_API_KEYSTORE_FILE=

# Password used to decrypt the keystore for the validator api.
TEKU_CLI_VALIDATOR_API_KEYSTORE_PASSWORD_FILE=

# Port number of Rest API. Default: 5052
TEKU_CLI_VALIDATOR_API_PORT=

# A recent checkpoint within the weak subjectivity period. Should be a string containing <BLOCK_ROOT>:<EPOCH_NUMBER> or a URL containing the field ws_checkpoint with the same information.
TEKU_CLI_WS_CHECKPOINT=

# Logging verbosity levels: OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL (default: INFO).
TEKU_CLI_LOGGING=

# Whether Status and Event log messages include a console color display code. Default: true
TEKU_CLI_LOG_COLOR_ENABLED=

# Whether a logger is added for the console, the log file, or both. Valid values: BOTH, CONSOLE, DEFAULT_BOTH, FILE, CUSTOM. Default: DEFAULT_BOTH
TEKU_CLI_LOG_DESTINATION=

# Path containing the location (relative or absolute) and the log filename. If not set will default to <data-path>/logs/teku.log
TEKU_CLI_LOG_FILE=

# Pattern for the filename to apply to rolled over log files. If not set will default to <data-path>/logs/teku_%d{yyyy-MM-dd}.log
TEKU_CLI_LOG_FILE_NAME_PATTERN=

# Whether frequent update events are logged (e.g. every slot and epoch event). Default: true
TEKU_CLI_LOG_INCLUDE_EVENTS_ENABLED=

# Whether events are logged when validators perform duties. Default: true
TEKU_CLI_LOG_INCLUDE_VALIDATOR_DUTIES_ENABLED=

# Whether block timing metrics are tracked and reported. Default: true
TEKU_CLI_METRICS_BLOCK_TIMING_TRACKING_ENABLED=

# Metric categories to enable. Default: [JVM, PROCESS, DISCOVERY, EXECUTOR, STORAGE_HOT_DB, REMOTE_VALIDATOR, VALIDATOR, NETWORK, BEACON, EVENTBUS, STORAGE_FINALIZED_DB, LIBP2P, VALIDATOR_PERFORMANCE, STORAGE]
TEKU_CLI_METRICS_CATEGORIES=

# Enables metrics collection via Prometheus. Default: false
TEKU_CLI_METRICS_ENABLED=

# Comma-separated list of hostnames to allow, or * to allow any host. Default: [127.0.0.1, localhost]
TEKU_CLI_METRICS_HOST_ALLOWLIST=

# Metrics network interface to expose metrics for Prometheus. Default: 127.0.0.1
TEKU_CLI_METRICS_INTERFACE=

# Metrics port to expose metrics for Prometheus. Default: 8008
TEKU_CLI_METRICS_PORT=

# Publish metrics for node monitoring to an external service
TEKU_CLI_METRICS_PUBLISH_ENDPOINT=

# Interval between metric publications to the external service (measured in seconds). Default: 60
TEKU_CLI_METRICS_PUBLISH_INTERVAL=
