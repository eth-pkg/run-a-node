# GLOBAL OPTIONS

# Allow insecure account unlocking when account-related RPCs are exposed by http
GETH_CLI_ALLOW_INSECURE_UNLOCK=false

# Directory for the keystore (default = inside the datadir)
GETH_CLI_KEYSTORE=

# Reduce key-derivation RAM & CPU usage at some expense of KDF strength
GETH_CLI_LIGHTKDF=

# Password file to use for non-interactive password input
GETH_CLI_PASSWORD=

# Path to the smartcard daemon (pcscd) socket file
GETH_CLI_PCSCDPATH=

# External signer (url or path to ipc file)
GETH_CLI_SIGNER=

# Comma separated list of accounts to unlock
GETH_CLI_UNLOCK=

# Enable monitoring and management of USB hardware wallets
GETH_CLI_USB=

# ALIASED (deprecated)

# Disk journal directory for trie cache to survive node restarts
GETH_CLI_CACHE_TRIE_JOURNAL=

# Time interval to regenerate the trie cache journal
GETH_CLI_CACHE_TRIE_REJOURNAL=

# Outgoing bandwidth limit for serving light clients (deprecated)
GETH_CLI_LIGHT_EGRESS=

# Incoming bandwidth limit for serving light clients (deprecated)
GETH_CLI_LIGHT_INGRESS=

# Maximum number of light clients to serve, or light servers to attach to (deprecated)
GETH_CLI_LIGHT_MAXPEERS=

# Disable ancient light chain data pruning (deprecated)
GETH_CLI_LIGHT_NOPRUNING=

# Enables serving light clients before syncing (deprecated)
GETH_CLI_LIGHT_NOSYNCSERVE=

# Maximum percentage of time allowed for serving LES requests (deprecated)
GETH_CLI_LIGHT_SERVE=

# Request a stack trace at a specific logging statement (deprecated)
GETH_CLI_LOG_BACKTRACE=

# Prepends log messages with call-site location (deprecated)
GETH_CLI_LOG_DEBUG=

# Enable expensive metrics collection and reporting (deprecated)
GETH_CLI_METRICS_EXPENSIVE=

# Enable mining (deprecated)
GETH_CLI_MINE=

# 0x prefixed public address for block mining rewards (deprecated)
GETH_CLI_MINER_ETHERBASE=

# Specify the maximum time allowance for creating a new payload (deprecated)
GETH_CLI_MINER_NEWPAYLOAD_TIMEOUT=

# Disables monitoring for and managing USB hardware wallets (deprecated)
GETH_CLI_NOUSB=

# Number of recent blocks to maintain transactions index for (deprecated, use history.transactions instead)
GETH_CLI_TXLOOKUPLIMIT=

# Enables the experimental RLPx V5 (Topic Discovery) mechanism (deprecated, use --discv5 instead)
GETH_CLI_V5DISC=

# Comma separated block number-to-hash mappings to enforce (<number>=<hash>) (deprecated in favor of --eth.requiredblocks)
GETH_CLI_WHITELIST=

# API AND CONSOLE

# Listening address for authenticated APIs
GETH_CLI_AUTHRPC_ADDR=

# Path to a JWT secret to use for authenticated RPC endpoints
GETH_CLI_AUTHRPC_JWTSECRET=

# Listening port for authenticated APIs
GETH_CLI_AUTHRPC_PORT=

# Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard.
GETH_CLI_AUTHRPC_VHOSTS=

# Execute JavaScript statement
GETH_CLI_EXEC=

# Enable GraphQL on the HTTP-RPC server
GETH_CLI_GRAPHQL=

# Comma separated list of domains from which to accept cross origin requests (browser enforced)
GETH_CLI_GRAPHQL_CORSDOMAIN=

# Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard.
GETH_CLI_GRAPHQL_VHOSTS=

# Pass custom headers to the RPC server when using --remotedb or the GETH_CLI_ attach console. This flag can be given multiple times.
GETH_CLI_HEADER=

# Enable the HTTP-RPC server
GETH_CLI_HTTP=

# HTTP-RPC server listening interface
GETH_CLI_HTTP_ADDR=

# APIs offered over the HTTP-RPC interface
GETH_CLI_HTTP_API=

# Comma separated list of domains from which to accept cross origin requests (browser enforced)
GETH_CLI_HTTP_CORSDOMAIN=

# HTTP-RPC server listening port
GETH_CLI_HTTP_PORT=

# HTTP path prefix on which JSON-RPC is served. Use '/' to serve on all paths.
GETH_CLI_HTTP_RPCPREFIX=

# Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard.
GETH_CLI_HTTP_VHOSTS=

# Disable the IPC-RPC server
GETH_CLI_IPCDISABLE=

# Filename for IPC socket/pipe within the datadir (explicit paths escape it)
GETH_CLI_IPCPATH=

# JavaScript root path for `loadScript`
GETH_CLI_JSPATH=

# Comma separated list of JavaScript files to preload into the console
GETH_CLI_PRELOAD=

# Allow for unprotected (non EIP155 signed) transactions to be submitted via RPC
GETH_CLI_RPC_ALLOW_UNPROTECTED_TXS=

# Maximum number of requests in a batch
GETH_CLI_RPC_BATCH_REQUEST_LIMIT=

# Maximum number of bytes returned from a batched call
GETH_CLI_RPC_BATCH_RESPONSE_MAX_SIZE=

# Enables the (deprecated) personal namespace
GETH_CLI_RPC_ENABLEDEPRECATEDPERSONAL=

# Sets a timeout used for eth_call (0=infinite)
GETH_CLI_RPC_EVMTIMEOUT=

# Sets a cap on gas that can be used in eth_call/estimateGas (0=infinite)
GETH_CLI_RPC_GASCAP=

# Sets a cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)
GETH_CLI_RPC_TXFEECAP=

# Enable the WS-RPC server
GETH_CLI_WS=

# WS-RPC server listening interface
GETH_CLI_WS_ADDR=

# APIs offered over the WS-RPC interface
GETH_CLI_WS_API=

# Origins from which to accept websockets requests
GETH_CLI_WS_ORIGINS=

# WS-RPC server listening port
GETH_CLI_WS_PORT=

# HTTP path prefix on which JSON-RPC is served. Use '/' to serve on all paths.
GETH_CLI_WS_RPCPREFIX=

# BEACON CHAIN

# Beacon node (CL) light client API URL. This flag can be given multiple times.
GETH_CLI_BEACON_API=

# Pass custom HTTP header fields to the emote beacon node API in "key:value" format. This flag can be given multiple times.
GETH_CLI_BEACON_API_HEADER=

# Beacon chain weak subjectivity checkpoint block hash
GETH_CLI_BEACON_CHECKPOINT=

# Beacon chain config YAML file
GETH_CLI_BEACON_CONFIG=

# Beacon chain genesis validators root
GETH_CLI_BEACON_GENESIS_GVROOT=

# Beacon chain genesis time
GETH_CLI_BEACON_GENESIS_TIME=

# Disable future slot signature filter
GETH_CLI_BEACON_NOFILTER=

# Beacon sync committee participation threshold
GETH_CLI_BEACON_THRESHOLD=

# DEVELOPER CHAIN

# Ephemeral proof-of-authority network with a pre-funded developer account, mining enabled
GETH_CLI_DEV=

# Initial block gas limit
GETH_CLI_DEV_GASLIMIT=

# Block period to use in developer mode (0 = mine only if transaction pending)
GETH_CLI_DEV_PERIOD=

# ETHEREUM

# Megabytes of memory allocated to bloom-filter for pruning
GETH_CLI_BLOOMFILTER_SIZE=

# TOML configuration file
GETH_CLI_CONFIG=

# Data directory for the databases and keystore
GETH_CLI_DATADIR=

# Root directory for ancient data (default = inside chaindata)
GETH_CLI_DATADIR_ANCIENT=

# Minimum free disk space in MB, once reached triggers auto shut down (default = --cache.gc converted to MB, 0 = disabled)
GETH_CLI_DATADIR_MINFREEDISK=

# Backing database implementation to use ('pebble' or 'leveldb')
GETH_CLI_DB_ENGINE=

# Comma separated block number-to-hash mappings to require for peering (<number>=<hash>)
GETH_CLI_ETH_REQUIREDBLOCKS=

# Exits after block synchronisation completes
GETH_CLI_EXITWHENSYNCED=

# GÃ¶rli network: pre-configured proof-of-authority test network
GETH_CLI_GOERLI=

# Holesky network: pre-configured proof-of-stake test network
GETH_CLI_HOLESKY=

# Ethereum mainnet
GETH_CLI_MAINNET=

# Explicitly set network id (integer)(For testnets: use --goerli, --sepolia, --holesky instead)
GETH_CLI_NETWORKID=

# Manually specify the Cancun fork timestamp, overriding the bundled setting
GETH_CLI_OVERRIDE_CANCUN=

# Manually specify the Verkle fork timestamp, overriding the bundled setting
GETH_CLI_OVERRIDE_VERKLE=

# Sepolia network: pre-configured proof-of-work test network
GETH_CLI_SEPOLIA=

# Enables snapshot-database mode (default = enable)
GETH_CLI_SNAPSHOT=

# GAS PRICE ORACLE

# Number of recent blocks to check for gas prices
GETH_CLI_GPO_BLOCKS=

# Gas price below which gpo will ignore transactions
GETH_CLI_GPO_IGNOREPRICE=

# Maximum transaction priority fee (or gasprice before London fork) to be recommended by gpo
GETH_CLI_GPO_MAXPRICE=

# Suggested gas price is the given percentile of a set of recent transaction gas prices
GETH_CLI_GPO_PERCENTILE=

# LOGGING AND DEBUGGING

# Compress the log files
GETH_CLI_LOG_COMPRESS=

# Write logs to a file
GETH_CLI_LOG_FILE=

# Log format to use (json|logfmt|terminal)
GETH_CLI_LOG_FORMAT=

# Maximum number of days to retain a log file
GETH_CLI_LOG_MAXAGE=

# Maximum number of log files to retain
GETH_CLI_LOG_MAXBACKUPS=

# Maximum size in MBs of a single log file
GETH_CLI_LOG_MAXSIZE=

# Enables log file rotation
GETH_CLI_LOG_ROTATE=

# Per-module verbosity: comma-separated list of <pattern>=<level> (e.g. eth/*=5,p2p=4)
GETH_CLI_LOG_VMODULE=

# Disables db compaction after import
GETH_CLI_NOCOMPACTION=

# Enable the pprof HTTP server
GETH_CLI_PPROF=

# pprof HTTP server listening interface
GETH_CLI_PPROF_ADDR=

# Turn on block profiling with the given rate
GETH_CLI_PPROF_BLOCKPROFILERATE=

# Write CPU profile to the given file
GETH_CLI_PPROF_CPUPROFILE=

# Turn on memory profiling with the given rate
GETH_CLI_PPROF_MEMPROFILERATE=

# pprof HTTP server listening port
GETH_CLI_PPROF_PORT=

# URL for remote database
GETH_CLI_REMOTEDB=

# Write execution trace to the given file
GETH_CLI_TRACE=

# Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail
GETH_CLI_VERBOSITY=

# METRICS AND STATS

# Reporting URL of a ethstats service (nodename:secret@host:port)
GETH_CLI_ETHSTATS=

# Enable metrics collection and reporting
GETH_CLI_METRICS=

# Enable stand-alone metrics HTTP server listening interface.
GETH_CLI_METRICS_ADDR=

# Enable metrics export/push to an external InfluxDB database
GETH_CLI_METRICS_INFLUXDB=

# InfluxDB bucket name to push reported metrics to (v2 only)
GETH_CLI_METRICS_INFLUXDB_BUCKET=

# InfluxDB database name to push reported metrics to
GETH_CLI_METRICS_INFLUXDB_DATABASE=

# InfluxDB API endpoint to report metrics to
GETH_CLI_METRICS_INFLUXDB_ENDPOINT=

# InfluxDB organization name (v2 only)
GETH_CLI_METRICS_INFLUXDB_ORGANIZATION=

# Password to authorize access to the database
GETH_CLI_METRICS_INFLUXDB_PASSWORD=

# Comma-separated InfluxDB tags (key/values) attached to all measurements
GETH_CLI_METRICS_INFLUXDB_TAGS=

# Token to authorize access to the database (v2 only)
GETH_CLI_METRICS_INFLUXDB_TOKEN=

# Username to authorize access to the database
GETH_CLI_METRICS_INFLUXDB_USERNAME=

# Enable metrics export/push to an external InfluxDB v2 database
GETH_CLI_METRICS_INFLUXDBV2=

# Metrics HTTP server listening port.
GETH_CLI_METRICS_PORT=

# Please note that --metrics.addr must be set to start the server.
GETH_CLI_METRICS_PORT=

# MINER

# Block extra data set by the miner (default = client version)
GETH_CLI_MINER_EXTRADATA=

# Target gas ceiling for mined blocks
GETH_CLI_MINER_GASLIMIT=

# Minimum gas price for mining a transaction
GETH_CLI_MINER_GASPRICE=

# 0x prefixed public address for the pending block producer (not used for actual block production)
GETH_CLI_MINER_PENDING_FEERECIPIENT=

# Time interval to recreate the block being mined
GETH_CLI_MINER_RECOMMIT=

# MISC


# Hash of the block to full sync to (dev testing feature)
GETH_CLI_SYNCTARGET=

# NETWORKING

# Comma separated enode URLs for P2P discovery bootstrap
GETH_CLI_BOOTNODES=

# Sets DNS discovery entry points (use "" to disable DNS)
GETH_CLI_DISCOVERY_DNS=

# Use a custom UDP port for P2P discovery
GETH_CLI_DISCOVERY_PORT=

# Enables the V4 discovery mechanism
GETH_CLI_DISCOVERY_V4=

# Enables the experimental RLPx V5 (Topic Discovery) mechanism
GETH_CLI_DISCOVERY_V5=

# Custom node name
GETH_CLI_IDENTITY=

# Maximum number of network peers (network disabled if set to 0)
GETH_CLI_MAXPEERS=

# Maximum number of pending connection attempts (defaults used if set to 0)
GETH_CLI_MAXPENDPEERS=

# NAT port mapping mechanism (any|none|upnp|pmp|pmp:<IP>|extip:<IP>)
GETH_CLI_NAT=

# Restricts network communication to the given IP networks (CIDR masks)
GETH_CLI_NETRESTRICT=

# P2P node key file
GETH_CLI_NODEKEY=

# P2P node key as hex (for testing)
GETH_CLI_NODEKEYHEX=

# Disables the peer discovery mechanism (manual peer addition)
GETH_CLI_NODISCOVER=

# Network listening port
GETH_CLI_PORT=

# PERFORMANCE TUNING

# Megabytes of memory allocated to internal caching (default = 4096 mainnet full node, 128 light mode)
GETH_CLI_CACHE=

# Size (in number of blocks) of the log cache for filtering
GETH_CLI_CACHE_BLOCKLOGS=

# Percentage of cache memory allowance to use for database io
GETH_CLI_CACHE_DATABASE=

# Percentage of cache memory allowance to use for trie pruning (default = 25% full mode, 0% archive mode)
GETH_CLI_CACHE_GC=

# Disable heuristic state prefetch during block import (less CPU and disk IO, more time waiting for data)
GETH_CLI_CACHE_NOPREFETCH=

# Enable recording the SHA3/keccak preimages of trie keys
GETH_CLI_CACHE_PREIMAGES=

# Percentage of cache memory allowance to use for snapshot caching (default = 10% full mode, 20% archive mode)
GETH_CLI_CACHE_SNAPSHOT=

# Percentage of cache memory allowance to use for trie caching (default = 15% full mode, 30% archive mode)
GETH_CLI_CACHE_TRIE=

# KZG library implementation to use; gokzg (recommended) or ckzg
GETH_CLI_CRYPTO_KZG=

# Raise the open file descriptor resource limit (default = system fd limit)
GETH_CLI_FDLIMIT=

# STATE HISTORY MANAGEMENT

# Blockchain garbage collection mode, only relevant in state.scheme=hash ("full", "archive")
GETH_CLI_GCMODE=

# Number of recent blocks to retain state history for (default = 90,000 blocks, 0 = entire chain)
GETH_CLI_HISTORY_STATE=

# Number of recent blocks to maintain transactions index for (default = about one year, 0 = entire chain)
GETH_CLI_HISTORY_TRANSACTIONS=

# Scheme to use for storing ethereum state ('hash' or 'path')
GETH_CLI_STATE_SCHEME=

# Blockchain sync mode ("snap" or "full")
GETH_CLI_SYNCMODE=

# TRANSACTION POOL (BLOB)

# Disk space to allocate for pending blob transactions (soft limit)
GETH_CLI_BLOBPOOL_DATACAP=

# Data directory to store blob transactions in
GETH_CLI_BLOBPOOL_DATADIR=

# Price bump percentage to replace an already existing blob transaction
GETH_CLI_BLOBPOOL_PRICEBUMP=

# TRANSACTION POOL (EVM)

# Maximum number of non-executable transaction slots permitted per account
GETH_CLI_TXPOOL_ACCOUNTQUEUE=

# Minimum number of executable transaction slots guaranteed per account
GETH_CLI_TXPOOL_ACCOUNTSLOTS=

# Maximum number of non-executable transaction slots for all accounts
GETH_CLI_TXPOOL_GLOBALQUEUE=

# Maximum number of executable transaction slots for all accounts
GETH_CLI_TXPOOL_GLOBALSLOTS=

# Disk journal for local transaction to survive node restarts
GETH_CLI_TXPOOL_JOURNAL=

# Maximum amount of time non-executable transaction are queued
GETH_CLI_TXPOOL_LIFETIME=

# Comma separated accounts to treat as locals (no flush, priority inclusion)
GETH_CLI_TXPOOL_LOCALS=

# Disables price exemptions for locally submitted transactions
GETH_CLI_TXPOOL_NOLOCALS=

# Price bump percentage to replace an already existing transaction
GETH_CLI_TXPOOL_PRICEBUMP=

# Minimum gas price tip to enforce for acceptance into the pool
GETH_CLI_TXPOOL_PRICELIMIT=

# Time interval to regenerate the local transaction journal
GETH_CLI_TXPOOL_REJOURNAL=

# VIRTUAL MACHINE

# Record information useful for VM and contract debugging
GETH_CLI_VMDEBUG=

# Name of tracer which should record internal VM operations (costly)
GETH_CLI_VMTRACE=

# Tracer configuration (JSON)
GETH_CLI_VMTRACE_JSONCONFIG=
