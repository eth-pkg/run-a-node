# ACCOUNT
# Allow insecure account unlocking when account-related RPCs are exposed by http
ALLOW_INSECURE_UNLOCK=false

# Directory for the keystore (default = inside the datadir)
KEYSTORE=

# Reduce key-derivation RAM & CPU usage at some expense of KDF strength
LIGHTKDF=false

# Password file to use for non-interactive password input
PASSWORD=

# Path to the smartcard daemon (pcscd) socket file
PCSCDPATH="/run/pcscd/pcscd.comm"

# External signer (url or path to ipc file)
SIGNER=

# Comma separated list of accounts to unlock
UNLOCK=

# Enable monitoring and management of USB hardware wallets
USB=false


# API AND CONSOLE
# Listening address for authenticated APIs
AUTHRPC_ADDR="localhost"

# Path to a JWT secret to use for authenticated RPC endpoints
AUTHRPC_JWTSECRET=

# Listening port for authenticated APIs
AUTHRPC_PORT=8551

# Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard.
AUTHRPC_VHOSTS="localhost"

# Execute JavaScript statement
EXEC=

# Enable GraphQL on the HTTP-RPC server. Note that GraphQL can only be started if an HTTP server is started as well.
GRAPHQL=false

# Comma separated list of domains from which to accept cross origin requests (browser enforced)
GRAPHQL_CORSDOMAIN=

# Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard.
GRAPHQL_VHOSTS="localhost"

# Pass custom headers to the RPC server when using --remotedb or the geth attach console. This flag can be given multiple times.
HEADER=

# Enable the HTTP-RPC server
HTTP=false

# HTTP-RPC server listening interface
HTTP_ADDR="localhost"

# APIs offered over the HTTP-RPC interface
HTTP_API=

# Comma separated list of domains from which to accept cross origin requests (browser enforced)
HTTP_CORSDOMAIN=

# HTTP-RPC server listening port
HTTP_PORT=8545

# HTTP path prefix on which JSON-RPC is served. Use '/' to serve on all paths.
HTTP_RPCPREFIX=

# Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard.
HTTP_VHOSTS="localhost"

# Disable the IPC-RPC server
IPCDISABLE=false

# Filename for IPC socket/pipe within the datadir (explicit paths escape it)
IPCPATH=

# JavaScript root path for `loadScript`
JSPATH=.

# Comma separated list of JavaScript files to preload into the console
PRELOAD=

# Allow for unprotected (non EIP155 signed) transactions to be submitted via RPC
RPC_ALLOW_UNPROTECTED_TXS=false

# Maximum number of requests in a batch
RPC_BATCH_REQUEST_LIMIT=1000

# Maximum number of bytes returned from a batched call
RPC_BATCH_RESPONSE_MAX_SIZE=25000000

# Enables the (deprecated) personal namespace
RPC_ENABLEDEPRECATEDPERSONAL=false

# Sets a timeout used for eth_call (0=infinite)
RPC_EVMTIMEOUT=5s

# Sets a cap on gas that can be used in eth_call/estimateGas (0=infinite)
RPC_GASCAP=50000000

# Sets a cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)
RPC_TXFEECAP=1

# Enable the WS-RPC server
WS=false

# WS-RPC server listening interface
WS_ADDR="localhost"

# APIs offered over the WS-RPC interface
WS_API=

# Origins from which to accept websockets requests
WS_ORIGINS=

# WS-RPC server listening port
WS_PORT=8546

# HTTP path prefix on which JSON-RPC is served. Use '/' to serve on all paths.
WS_RPCPREFIX=


# BEACON CHAIN
# Beacon node (CL) light client API URL. This flag can be given multiple times.
BEACON_API=

# Pass custom HTTP header fields to the remote beacon node API in "key:value" format. This flag can be given multiple times.
BEACON_API_HEADER=

# Beacon chain weak subjectivity checkpoint block hash
BEACON_CHECKPOINT=

# Beacon chain config YAML file
BEACON_CONFIG=

# Beacon chain genesis validators root
BEACON_GENESIS_GVROOT=

# Beacon chain genesis time
BEACON_GENESIS_TIME=0

# Disable future slot signature filter
BEACON_NOFILTER=false

# Beacon sync committee participation threshold
BEACON_THRESHOLD=342


# DEVELOPER CHAIN
# Ephemeral proof-of-authority network with a pre-funded developer account, mining enabled
DEV=false

# Initial block gas limit
DEV_GASLIMIT=11500000

# Block period to use in developer mode (0 = mine only if transaction pending)
DEV_PERIOD=0


# ETHEREUM
# Megabytes of memory allocated to bloom-filter for pruning
BLOOMFILTER_SIZE=2048

# TOML configuration file
CONFIG=

# Data directory for the databases and keystore
DATADIR=/home/eniko/.ethereum

# Root directory for ancient data (default = inside chaindata)
DATADIR_ANCIENT=

# Minimum free disk space in MB, once reached triggers auto shut down (default = --cache.gc converted to MB, 0 = disabled)
DATADIR_MINFREEDISK=

# Backing database implementation to use ('pebble' or 'leveldb')
DB_ENGINE=

# Comma separated block number-to-hash mappings to require for peering (<number>=<hash>)
ETH_REQUIREDBLOCKS=

# Exits after block synchronisation completes
EXITWHENSYNCED=false

# GÃ¶rli network: pre-configured proof-of-authority test network
GOERLI=false

# Holesky network: pre-configured proof-of-stake test network
HOLESKY=false

# Ethereum mainnet
MAINNET=false

# Explicitly set network id (integer)(For testnets: use --goerli, --sepolia, --holesky instead)
NETWORKID=0

# Manually specify the Cancun fork timestamp, overriding the bundled setting
OVERRIDE_CANCUN=0

# Manually specify the Verkle fork timestamp, overriding the bundled setting
OVERRIDE_VERKLE=0

# Sepolia network: pre-configured proof-of-work test network
SEPOLIA=false

# Enables snapshot-database mode (default = enable)
SNAPSHOT=true


# GAS PRICE ORACLE
# Number of recent blocks to check for gas prices
GPO_BLOCKS=20

# Gas price below which gpo will ignore transactions
GPO_IGNOREPRICE=2

# Maximum transaction priority fee (or gasprice before London fork) to be recommended by gpo
GPO_MAXPRICE=500000000000

# Suggested gas price is the given percentile of a set of recent transaction gas prices
GPO_PERCENTILE=60


# LOGGING AND DEBUGGING
# Compress the log files
LOG_COMPRESS=false

# Write logs to a file
LOG_FILE=

# Log format to use (json|logfmt|terminal)
LOG_FORMAT=

# Maximum number of days to retain a log file
LOG_MAXAGE=30

# Maximum number of log files to retain
LOG_MAXBACKUPS=10

# Maximum size in MBs of a single log file
LOG_MAXSIZE=100

# Enables log file rotation
LOG_ROTATE=false

# Per-module verbosity: comma-separated list of <pattern>=<level> (e.g. eth/*=5,p2p=4)
LOG_VMODULE=

# Disables db compaction after import
NOCOMPACTION=false

# Enable the pprof HTTP server
PPROF=false

# pprof HTTP server listening interface
PPROF_ADDR="127.0.0.1"

# Turn on block profiling with the given rate
PPROF_BLOCKPROFILERATE=0

# Write CPU profile to the given file
PPROF_CPUPROFILE=

# Turn on memory profiling with the given rate
PPROF_MEMPROFILERATE=524288

# pprof HTTP server listening port
PPROF_PORT=6060

# URL for remote database
REMOTEDB=

# Write execution trace to the given file
TRACE=

# Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail
VERBOSITY=3


# METRICS AND STATS
# Reporting URL of a ethstats service (nodename:secret@host:port)
ETHSTATS=

# Enable metrics collection and reporting
METRICS=false

# Enable stand-alone metrics HTTP server listening interface.
METRICS_ADDR=

# Enable metrics export/push to an external InfluxDB database
METRICS_INFLUXDB=false

# InfluxDB bucket name to push reported metrics to (v2 only)
METRICS_INFLUXDB_BUCKET="geth"

# InfluxDB database name to push reported metrics to
METRICS_INFLUXDB_DATABASE="geth"

# InfluxDB API endpoint to report metrics to
METRICS_INFLUXDB_ENDPOINT="http://localhost:8086"

# InfluxDB organization name (v2 only)
METRICS_INFLUXDB_ORGANIZATION="geth"

# Password to authorize access to the database
METRICS_INFLUXDB_PASSWORD="test"

# Comma-separated InfluxDB tags (key/values) attached to all measurements
METRICS_INFLUXDB_TAGS="host=localhost"

# Token to authorize access to the database (v2 only)
METRICS_INFLUXDB_TOKEN="test"

# Username to authorize access to the database
METRICS_INFLUXDB_USERNAME="test"

# Enable metrics export/push to an external InfluxDB v2 database
METRICS_INFLUXDBV2=false

# Metrics HTTP server listening port.
METRICS_PORT=6060
# Please note that --metrics.addr must be set to start the server.


# MINER
# Block extra data set by the miner (default = client version)
MINER_EXTRADATA=

# Target gas ceiling for mined blocks
MINER_GASLIMIT=30000000

# Minimum gas price for mining a transaction
MINER_GASPRICE=1000000000

# 0x prefixed public address for the pending block producer (not used for actual block production)
MINER_PENDING_FEERECIPIENT=

# Time interval to recreate the block being mined
MINER_RECOMMIT=2s


# MISC
# show help
HELP=false

# Hash of the block to full sync to (dev testing feature)
SYNCTARGET=

# print the version
VERSION=false


# NETWORKING
# Comma separated enode URLs for P2P discovery bootstrap
BOOTNODES=

# Sets DNS discovery entry points (use "" to disable DNS)
DISCOVERY_DNS=

# Use a custom UDP port for P2P discovery
DISCOVERY_PORT=30303

# Enables the V4 discovery mechanism
DISCOVERY_V4=true

# Enables the experimental RLPx V5 (Topic Discovery) mechanism
DISCOVERY_V5=false

# Custom node name
IDENTITY=

# Maximum number of network peers (network disabled if set to 0)
MAXPEERS=50

# Maximum number of pending connection attempts (defaults used if set to 0)
MAXPENDPEERS=0

# NAT port mapping mechanism (any|none|upnp|pmp|pmp:<IP>|extip:<IP>)
NAT="any"

# Restricts network communication to the given IP networks (CIDR masks)
NETRESTRICT=

# P2P node key file
NODEKEY=

# P2P node key as hex (for testing)
NODEKEYHEX=

# Disables the peer discovery mechanism (manual peer addition)
NODISCOVER=false

# Network listening port
PORT=30303


# PERFORMANCE TUNING
# Megabytes of memory allocated to internal caching (default = 4096 mainnet full node, 128 light mode)
CACHE=1024

# Size (in number of blocks) of the log cache for filtering
CACHE_BLOCKLOGS=32

# Percentage of cache memory allowance to use for database io
CACHE_DATABASE=50

# Percentage of cache memory allowance to use for trie pruning (default = 25% full mode, 0% archive mode)
CACHE_GC=25

# Disable heuristic state prefetch during block import (less CPU and disk IO, more time waiting for data)
CACHE_NOPREFETCH=false

# Enable recording the SHA3/keccak preimages of trie keys
CACHE_PREIMAGES=false

# Percentage of cache memory allowance to use for snapshot caching (default = 10% full mode, 20% archive mode)
CACHE_SNAPSHOT=10

# Percentage of cache memory allowance to use for trie caching (default = 15% full mode, 30% archive mode)
CACHE_TRIE=15

# KZG library implementation to use; gokzg (recommended) or ckzg
CRYPTO_KZG="gokzg"

# Raise the open file descriptor resource limit (default = system fd limit)
FDLIMIT=0


# STATE HISTORY MANAGEMENT
# Blockchain garbage collection mode, only relevant in state.scheme=hash ("full", "archive")
GCMODE="full"

# Number of recent blocks to retain state history for (default = 90,000 blocks, 0 = entire chain)
HISTORY_STATE=90000

# Number of recent blocks to maintain transactions index for (default = about one year, 0 = entire chain)
HISTORY_TRANSACTIONS=2350000

# Scheme to use for storing ethereum state ('hash' or 'path')
STATE_SCHEME=

# Blockchain sync mode ("snap" or "full")
SYNCMODE="snap"


# TRANSACTION POOL (BLOB)
# Disk space to allocate for pending blob transactions (soft limit)
BLOBPOOL_DATACAP=2684354560

# Data directory to store blob transactions in
BLOBPOOL_DATADIR="blobpool"

# Price bump percentage to replace an already existing blob transaction
BLOBPOOL_PRICEBUMP=100


# TRANSACTION POOL (EVM)
# Maximum number of non-executable transaction slots permitted per account
TXPOOL_ACCOUNTQUEUE=64

# Minimum number of executable transaction slots guaranteed per account
TXPOOL_ACCOUNTSLOTS=16

# Maximum number of non-executable transaction slots for all accounts
TXPOOL_GLOBALQUEUE=1024

# Maximum number of executable transaction slots for all accounts
TXPOOL_GLOBALSLOTS=5120

# Disk journal for local transaction to survive node restarts
TXPOOL_JOURNAL="transactions.rlp"

# Maximum amount of time non-executable transaction are queued
TXPOOL_LIFETIME=3h0m0s

# Comma separated accounts to treat as locals (no flush, priority inclusion)
TXPOOL_LOCALS=

# Disables price exemptions for locally submitted transactions
TXPOOL_NOLOCALS=false

# Price bump percentage to replace an already existing transaction
TXPOOL_PRICEBUMP=10

# Minimum gas price tip to enforce for acceptance into the pool
TXPOOL_PRICELIMIT=1

# Time interval to regenerate the local transaction journal
TXPOOL_REJOURNAL=1h0m0s


# VIRTUAL MACHINE
# Record information useful for VM and contract debugging
VMDEBUG=false

# Name of tracer which should record internal VM operations (costly)
VMTRACE=

# Tracer configuration (JSON)
VMTRACE_JSONCONFIG=
