## Beacon 

# Lodestar root data directory
DATA_DIR=

# Name of the Ethereum Consensus chain network to join
NETWORK=mainnet
# choices: "mainnet", "gnosis", "goerli", "ropsten", "sepolia", "holesky", "chiado", "ephemery", "dev"

# Network configuration file
PARAMS_FILE=

# Terminal PoW block TTD override
TERMINAL_TOTAL_DIFFICULTY_OVERRIDE=

# Terminal PoW block hash override
TERMINAL_BLOCK_HASH_OVERRIDE=

# Terminal PoW block hash override activation epoch
TERMINAL_BLOCK_HASH_EPOCH_OVERRIDE=

# Server url hosting Beacon Node APIs to fetch weak subjectivity state. Fetch latest finalized by default, else set --wssCheckpoint
CHECKPOINT_SYNC_URL=

# Set a checkpoint state to start syncing from
CHECKPOINT_STATE=

# Start beacon node off a state at the provided weak subjectivity checkpoint, to be supplied in <blockRoot>:<epoch> format. For example, 0x1234:100 will sync and start off from the weak subjectivity state at checkpoint of epoch 100 with block root 0x1234.
WSS_CHECKPOINT=

# Force syncing from checkpoint state even if db state is within weak subjectivity period. This helps to avoid long sync times after node has been offline for a while.
FORCE_CHECKPOINT_SYNC=false

# Do not send implementation details over p2p identify protocol and in builder, execution engine and eth1 requests
PRIVATE=false

# Log validator monitor events as info. This requires metrics to be enabled.
VALIDATOR_MONITOR_LOGS=false

# Logging verbosity level for emitting logs to terminal
LOG_LEVEL=info
# choices: "error", "warn", "info", "verbose", "debug", "trace"

# Path to output all logs to a persistent log file, use 'none' to disable
LOG_FILE=

# Logging verbosity level for emitting logs to file
LOG_FILE_LEVEL=debug
# choices: "error", "warn", "info", "verbose", "debug", "trace"

# Daily rotate log files, set to an integer to limit the file count, set to 0 (zero) to disable rotation
LOG_FILE_DAILY_ROTATE=5

# Enable/disable HTTP API
REST=true

# Pick namespaces to expose for HTTP API. Set to '*' to enable all namespaces
REST_NAMESPACE=beacon,config,events,node,validator,lightclient
# choices: "beacon", "config", "debug", "events", "lightclient", "lodestar", "node", "proof", "validator", "*"

# Configures the Access-Control-Allow-Origin CORS header for HTTP API
REST_CORS="*"

# Set host for HTTP API
REST_ADDRESS="127.0.0.1"

# Set port for HTTP API
REST_PORT=9596

# Enable Swagger UI for API exploration at http://{address}:{port}/documentation
REST_SWAGGER_UI=

# Specify fee recipient default for collecting the EL block fees and rewards (a hex string representing 20 bytes address: ^0x[a-fA-F0-9]{40}$) in case validator fails to update for a validator index before calling produceBlock.
SUGGESTED_FEE_RECIPIENT=0x0000000000000000000000000000000000000000

# Flag to SSE emit execution payloadAttributes before every slot
EMIT_PAYLOAD_ATTRIBUTES=false

# Number of epochs to retain finalized blobs (minimum of MIN_EPOCHS_FOR_BLOB_SIDECARS_REQUESTS)
CHAIN_ARCHIVE_BLOB_EPOCHS=

# Whether to follow the eth1 chain
ETH1=true

# Urls to Eth1 node with enabled rpc. If not explicitly provided and execution endpoint provided via execution.urls, it will use execution.urls. Otherwise will try connecting on the specified default(s)
ETH1_PROVIDER_URLS=http://localhost:8545

# Urls to execution client engine API
EXECUTION_URLS=http://localhost:8551

# Timeout in milliseconds for execution engine API HTTP client
EXECUTION_TIMEOUT=12000

# Number of retries when calling execution engine API
EXECUTION_RETRIES=2

# Delay time in milliseconds between retries when retrying calls to the execution engine API
EXECUTION_RETRY_DELAY=2000

# File path to a shared hex-encoded jwt secret which will be used to generate and bundle HS256 encoded jwt tokens for authentication with the EL client's rpc server hosting engine apis. Secret to be exactly same as the one used by the corresponding EL client.
JWT_SECRET=

# An optional identifier to be set in the id field of the claims included in jwt tokens used for authentication with EL client's rpc server hosting engine apis
JWT_ID=

# Enable builder interface
BUILDER=

# Url hosting the builder API
BUILDER_URL=http://localhost:8661

# Timeout in milliseconds for builder API HTTP client
BUILDER_TIMEOUT=12000

# Window to inspect missed slots for enabling/disabling builder circuit breaker
BUILDER_FAULT_INSPECTION_WINDOW=

# Number of missed slots allowed in the faultInspectionWindow for builder circuit
BUILDER_ALLOWED_FAULTS=

# Enable the Prometheus metrics HTTP server
METRICS=

# Listen TCP port for the Prometheus metrics HTTP server
METRICS_PORT=8008

# Listen address for the Prometheus metrics HTTP server
METRICS_ADDRESS="127.0.0.1"

# Enables monitoring service for sending clients stats to the specified endpoint of a remote service (e.g. beaconcha.in)
MONITORING_ENDPOINT=

# Interval in milliseconds between sending client stats to the remote service
MONITORING_INTERVAL=60000

# Enable discv5
DISCV5=true

# The IPv4 address to listen for p2p UDP and TCP connections
LISTEN_ADDRESS="0.0.0.0"

# The TCP/UDP port to listen on. The UDP port can be modified by the --discoveryPort flag.
PORT=9000

# The UDP port that discovery will listen on. Defaults to port
DISCOVERY_PORT=9000

# The IPv6 address to listen for p2p UDP and TCP connections
LISTEN_ADDRESS6=

# The TCP/UDP port to listen on. The UDP port can be modified by the --discoveryPort6 flag.
PORT6=9090

# The UDP port that discovery will listen on. Defaults to port6
DISCOVERY_PORT6=9090

# Bootnodes for discv5 discovery
BOOTNODES="[]"

# The target connected peers. Above this number peers will be disconnected
TARGET_PEERS=100

# Subscribe to all subnets regardless of validator count
SUBSCRIBE_ALL_SUBNETS=false

# Disable peer scoring, used for testing on devnets
DISABLE_PEER_SCORING=false

# Enable mdns local peer discovery
MDNS=false

# Override ENR IP entry
ENR_IP=

# Override ENR TCP entry
ENR_TCP=

# Override ENR UDP entry
ENR_UDP=

# Override ENR IPv6 entry
ENR_IP6=

# Override ENR (IPv6-specific) TCP entry
ENR_TCP6=

# Override ENR (IPv6-specific) UDP entry
ENR_UDP6=

# Allow configuration of non-local addresses
NAT=false
